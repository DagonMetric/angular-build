{
  "apps": [
    {
      // App source root directory.
      "root": "src",
      // Build/bundle output directory.
      "outDir": "dist",
      // The public Url address of the output files.
      "publicPath": "/",
      // App main bootstrap file.
      "main": null,
      // Typescript configuration file.
      "tsconfig": "tsconfig.json",
      // Assets to be copied to output directory, it can be used glob pattern e.g. ["assets/**/*"].
      "assets": [],
      // Global styles to be bundled, it can be .css, .scss/.sass, .less, .stylus - e.g. ["styles.scss"].
      "styles": [],
      // Script files to be added to the global scope e.g ["../node_modules/jquery/dist/jquery.js", "../node_modules/tether/dist/js/tether.js", "../node_modules/bootstrap/dist/js/bootstrap.js"].
      "scripts": [],
      // To automatically load module with alias key e.g { "$": "jquery"}.
      "provide": {},

      // An index source template file e.g. "index.html".
      "index": null,
      // The file to write the Html to. e.g. "../Views/Shared/_BundledScripts.cshtml"
      "indexOutFileName": null,
      // Favicon configuration file.
      "faviconConfig": "favicon-config.json",
      // Html injection options
      "htmlInjectOptions": {
        // Separate output file name for generated favicon tags. e.g "../Views/Shared/_FavIcons.cshtml"
        "iconsInjectOutFileName": null,
        // Separate output file name for style links. e.g. "../Views/Shared/_BundledStyles.cshtml"
        "stylesInjectOutFileName": null,
        // Custom attributes for script tags. e.g. { "asp-append-version": true }
        "customScriptAttributes": {},
        // Custom attributes for link tags. e.g. { "asp-append-version": true }
        "customLinkAttributes": {}
      },

      // Generate dll bundles for development builds.
      "referenceDllsOnDevelopment": false,
      // Generate dll bundles for production builds.
      "referenceDllsOnProduction": false,
      // If true, it automatically run command as specified in tryBuildDllCommand when dll [vendor]-manifest.json file is not found.
      "tryBundleDlls": false,
      // The entries for dll bundle.
      "dlls": [
        {
          "entry": "polyfills.ts",
          "importToMain": true
        },
        {
          "entry": "vendors.ts"
        }
      ]
    }
  ]
}
