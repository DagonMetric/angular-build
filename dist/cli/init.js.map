{"version":3,"file":"init.js","sourceRoot":"","sources":["../../src/cli/init.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\r\nimport * as fs from 'fs-extra';\r\nimport * as resolve from 'resolve';\r\n\r\nimport * as chalk from 'chalk';\r\nimport * as yargs from 'yargs';\r\n\r\nimport { CliOptions } from './models';\r\nimport { AngularBuildConfig, IconPluginOptions } from '../webpack';\r\n\r\nimport { readJsonAsync, checkFileOrDirectoryExistsAsync, findFileOrDirectoryFromPossibleAsync, getVersionfromPackageJsonAsync, askAsync, spawnAsync } from '../utils';\r\n\r\nconst cliVersion = require('../../package.json').version;\r\nconst initCommandUsage = `\\n${chalk.green(`angular-build ${cliVersion}`)}\\n\r\nUsage:\r\n  ngb init [options...]`;\r\n\r\nexport const initCommandModule: yargs.CommandModule = {\r\n    command: 'init',\r\n    describe: 'Create angular-build config files',\r\n    builder: (yargv: yargs.Argv) => {\r\n        return yargv\r\n            .reset()\r\n            .usage(initCommandUsage)\r\n            .example('ngb init --prompt', 'Create angular-build config files with user prompt option')\r\n            .option('p',\r\n            {\r\n                alias: 'prompt',\r\n                describe: 'Confirm user by prompting',\r\n                type: 'boolean'\r\n                //default: false\r\n            })\r\n            .option('f',\r\n            {\r\n                alias: 'force',\r\n                describe: 'it will use only defaults and not prompt you for any options',\r\n                type: 'boolean'\r\n            })\r\n            .option('link-cli',\r\n            {\r\n                describe: 'Link angular-build cli to current project',\r\n                type: 'boolean'\r\n            })\r\n            .option('skip-install-tooling',\r\n            {\r\n                describe: 'Skip install tooling',\r\n                type: 'boolean'\r\n            })\r\n            .option('use-angular-cli-config-file',\r\n            {\r\n                describe: 'Use angular-cli.json as a build config file'\r\n                //type: 'boolean',\r\n                //default: false\r\n            })\r\n            .option('webpack-config-file-name',\r\n            {\r\n                describe: 'Webpack config file name',\r\n                type: 'string'\r\n            })\r\n            .option('favicon-naster-picture',\r\n            {\r\n                describe: 'favicon master picture file name',\r\n                type: 'string'\r\n            })\r\n            .option('override-angular-build-config-file',\r\n            {\r\n                describe: 'Override angular-build.json file',\r\n                type: 'boolean',\r\n                default: false\r\n            })\r\n            .option('override-webpack-config-file',\r\n            {\r\n                describe: 'Override webpack config file',\r\n                type: 'boolean',\r\n                default: false\r\n            })\r\n            .option('root',\r\n            {\r\n                describe: 'Client app root directory',\r\n                type: 'string'\r\n            })\r\n            .option('out-dir',\r\n            {\r\n                describe: 'Build/bundle output directory',\r\n                type: 'string'\r\n            })\r\n            .option('public-path',\r\n            {\r\n                describe: 'Public Url address of the output files',\r\n                type: 'string'\r\n            })\r\n            .option('main',\r\n            {\r\n                describe: 'App main bootstrap file',\r\n                type: 'string'\r\n            })\r\n            .option('tsconfig',\r\n            {\r\n                describe: 'Typescript configuration file',\r\n                type: 'string'\r\n            })\r\n            .option('assets',\r\n            {\r\n                describe: 'Assets to be copied to output directory',\r\n                type: 'array'\r\n            })\r\n            .option('styles',\r\n            {\r\n                describe: 'Global styles (.css/.scss/.less/.stylus) to be bundled',\r\n                type: 'array'\r\n            })\r\n            .option('scripts',\r\n            {\r\n                describe: 'Script files to be added to the global scope',\r\n                type: 'array'\r\n            })\r\n            .option('provide',\r\n            {\r\n                describe: 'To automatically load module with alias key'\r\n            })\r\n            .option('index',\r\n            {\r\n                describe: 'Html index source template file',\r\n                type: 'string'\r\n            })\r\n            .option('index-out-file-name',\r\n            {\r\n                describe: 'The file to write the Html to',\r\n                type: 'string'\r\n            })\r\n            .option('favicon-config',\r\n            {\r\n                describe: 'Favicon configuration file',\r\n                type: 'string'\r\n            })\r\n            .option('html-inject-options',\r\n            {\r\n                describe: 'Html injection options'\r\n            })\r\n            .option('reference-dlls-on-development',\r\n            {\r\n                describe: 'Generate dll bundles for development builds',\r\n                type: 'boolean'\r\n                //default: true\r\n            })\r\n            .option('reference-dlls-on-production',\r\n            {\r\n                describe: 'Generate dll bundles for production builds',\r\n                type: 'boolean'\r\n                //default: false\r\n            })\r\n            .option('try-bundle-dlls',\r\n            {\r\n                describe:\r\n                'To automatically bundle dlls',\r\n                type: 'boolean'\r\n                //default: false\r\n            })\r\n            .option('dlls',\r\n            {\r\n                describe: 'The entries for dll bundle',\r\n                type: 'array'\r\n            })\r\n            .option('environments',\r\n            {\r\n                describe:\r\n                'TheEnvironment files to be used with build args (--environment=dev or --environment=prod)'\r\n            });\r\n    },\r\n    handler: null\r\n};\r\n\r\nexport interface PackageToCheck {\r\n    packageName: string;\r\n    isPreReleased?: boolean;\r\n    version?: string;\r\n    resolvedPath?: string;\r\n};\r\n\r\nexport interface PackageJsonConfig {\r\n    dependencies?: { [key: string]: string },\r\n    devDependencies?: { [key: string]: string },\r\n    peerDependencies?: { [key: string]: string }\r\n}\r\n\r\nexport interface InitConfig {\r\n    cliOptions: CliOptions;\r\n    cliPackageJsonConfig?: PackageJsonConfig;\r\n\r\n    angularBuildConfig?: AngularBuildConfig;\r\n    overrideAngularBuildConfigFile?: boolean;\r\n    angularBuildConfigFileExists?: boolean;\r\n\r\n    userAngularCliConfig?: any;\r\n    useAngularCliConfigFile?: boolean;\r\n    angularCliConfigFileExists?: boolean;\r\n\r\n    faviconConfig?: IconPluginOptions;\r\n\r\n    webpackConfigFileName?: string;\r\n    webpackConfigFileExists?: boolean;\r\n    overrideWebpackConfigFile?: boolean;\r\n\r\n    userPackageConfigFileExists?: boolean;\r\n    userPackageConfigFile?: string;\r\n    userPackageConfig?: any;\r\n\r\n    tsConfig?: any;\r\n}\r\n\r\n// Command\r\n//\r\nexport function init(cliOptions: CliOptions) {\r\n    return checkFileOrDirectoryExistsAsync(path.resolve(cliOptions.cwd, 'angular-build.json')).then(exists => {\r\n        if (exists && (!cliOptions.commandOptions || !(cliOptions.commandOptions.prompt || cliOptions.commandOptions.force || cliOptions.commandOptions.linkCli))) {\r\n            return Promise.resolve(0);\r\n        } else {\r\n            return initCore(cliOptions);\r\n        }\r\n    });\r\n}\r\n\r\nfunction initCore(cliOptions: CliOptions) {\r\n    const projectRoot = cliOptions.cwd;\r\n\r\n    return checkFileOrDirectoryExistsAsync(path.resolve(projectRoot, 'package.json'))\r\n        .then((exists: boolean) => {\r\n            const cfg: InitConfig = {\r\n                cliOptions: cliOptions\r\n            };\r\n\r\n            if (exists) {\r\n                cfg.userPackageConfigFileExists = true;\r\n                cfg.userPackageConfigFile = path.resolve(projectRoot, 'package.json');\r\n                return Promise.resolve(cfg);\r\n            } else {\r\n                if (cliOptions.commandOptions.force) {\r\n                    return spawnAsync('npm', ['init', '-f', '--color', 'always', '--loglevel', 'error']).then(() => {\r\n                        cfg.userPackageConfigFileExists = true;\r\n                        cfg.userPackageConfigFile = path.resolve(projectRoot, 'package.json');\r\n                        return cfg;\r\n                    });\r\n                } else {\r\n                    const msg = `'package.json' file doesn't exist.\\nPlease run ${chalk\r\n                        .cyan('npm init')\r\n                        } command to init 'package.json' file or run ${chalk.cyan('ngb init -f')} to force create 'package.json' file.`;\r\n                    return Promise.reject(msg);\r\n                }\r\n            }\r\n        })\r\n        .then((cfg: InitConfig) => {\r\n            return readJsonAsync(require.resolve('../../package.json')).then(cliPkgConfig => {\r\n                cfg.cliPackageJsonConfig = cliPkgConfig;\r\n                return cfg;\r\n            });\r\n        })\r\n        .then((cfg: InitConfig) => {\r\n            if (cfg.cliOptions.commandOptions.skipInstallTooling) {\r\n                return Promise.resolve(cfg);\r\n            }\r\n            return installToolings(cfg).then(() => cfg);\r\n        })\r\n        .then((cfg: InitConfig) => {\r\n            return readJsonAsync(require.resolve('../../templates/angular-build.json')).then(angularBuildConfig => {\r\n                cfg.angularBuildConfig = angularBuildConfig;\r\n                return cfg;\r\n            });\r\n        })\r\n        .then((cfg: InitConfig) => {\r\n            return readJsonAsync(require.resolve('../../templates/tsconfig.json')).then((tsConfig: any) => {\r\n                cfg.tsConfig = tsConfig;\r\n                return cfg;\r\n            });\r\n        })\r\n        .then((cfg: InitConfig) => {\r\n            return readJsonAsync(require.resolve('../../templates/favicon-config.json')).then((faviconConfig: IconPluginOptions) => {\r\n                cfg.faviconConfig = faviconConfig;\r\n                return cfg;\r\n            });\r\n        })\r\n        .then((cfg: InitConfig) => {\r\n            return readJsonAsync(cfg.userPackageConfigFile).then((userPackageConfig: any) => {\r\n                cfg.userPackageConfig = userPackageConfig;\r\n                return cfg;\r\n            });\r\n        })\r\n        // 0. merge\r\n        .then((cfg: InitConfig) => mergeConfigAsync(cfg).then(() => cfg))\r\n        // 1. save angular-build.json file\r\n        .then((cfg: InitConfig) => {\r\n            if (cfg.useAngularCliConfigFile) {\r\n                if (cfg.angularCliConfigFileExists && cfg.userAngularCliConfig) {\r\n                    cfg.userAngularCliConfig.apps[0] = Object.assign(cfg.userAngularCliConfig.apps[0], cfg.angularBuildConfig.apps[0]);\r\n                    return new Promise((resolve, reject) => {\r\n                        fs.writeFile(path.resolve(projectRoot, 'angular-cli.json'),\r\n                            JSON.stringify(cfg.userAngularCliConfig, null, 2),\r\n                            err => err ? reject(err) : resolve(cfg));\r\n                    });\r\n                } else {\r\n                    return new Promise((resolve, reject) => {\r\n                        fs.writeFile(path.resolve(projectRoot, 'angular-cli.json'),\r\n                            JSON.stringify(cfg.angularBuildConfig, null, 2),\r\n                            err => err ? reject(err) : resolve(cfg));\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                if (cfg.angularBuildConfigFileExists && !cfg.overrideAngularBuildConfigFile) {\r\n                    return Promise.resolve(cfg);\r\n                } else {\r\n                    return new Promise((resolve, reject) => {\r\n                        fs.writeFile(path.resolve(projectRoot, 'angular-build.json'),\r\n                            JSON.stringify(cfg.angularBuildConfig, null, 2),\r\n                            err => err ? reject(err) : resolve(cfg));\r\n                    });\r\n                }\r\n            }\r\n        })\r\n        // 2. copy webpack.config file\r\n        .then((cfg: InitConfig) => {\r\n            if (cfg.webpackConfigFileExists && !cfg.overrideWebpackConfigFile) {\r\n                return Promise.resolve(cfg);\r\n            } else {\r\n                return new Promise((resolve, reject) => {\r\n                    if (cfg.webpackConfigFileName && cfg.webpackConfigFileName.match(/\\.ts$/i)) {\r\n                        fs.copy(require.resolve('../../templates/webpack.config.ts'),\r\n                            path.resolve(projectRoot, cfg.webpackConfigFileName),\r\n                            err => {\r\n                                err ? reject(err) : resolve(cfg);\r\n                            });\r\n                    } else {\r\n                        fs.copy(require.resolve('../../templates/webpack.config.js'),\r\n                            path.resolve(projectRoot, cfg.webpackConfigFileName || 'webpack.config.js'),\r\n                            err => {\r\n                                err ? reject(err) : resolve(cfg);\r\n                            });\r\n                    }\r\n                });\r\n            }\r\n        })\r\n        // 3. Create src folder\r\n        .then((cfg: InitConfig) => {\r\n            const appConfig = cfg.angularBuildConfig.apps[0];\r\n            const srcPath = path.resolve(projectRoot, appConfig.root);\r\n            return checkFileOrDirectoryExistsAsync(srcPath, true).then(exists => {\r\n                if (exists) {\r\n                    return Promise.resolve(cfg);\r\n                } else {\r\n                    return new Promise((resolve, reject) => {\r\n                        fs.mkdir(srcPath, err => err ? reject(err) : resolve(cfg));\r\n                    });\r\n                }\r\n            }\r\n            );\r\n        })\r\n        // 4. save tsconfig.json file\r\n        .then((cfg: InitConfig) => {\r\n            const appConfig = cfg.angularBuildConfig.apps[0];\r\n            const tsConfigPath = path.resolve(projectRoot, appConfig.root, appConfig.tsconfig);\r\n            const tsConfig = cfg.tsConfig;\r\n            tsConfig.compilerOptions.outDir = `../${appConfig.outDir}/out-tsc`;\r\n\r\n            return checkFileOrDirectoryExistsAsync(tsConfigPath).then(exists => {\r\n                if (exists) {\r\n                    return Promise.resolve(cfg);\r\n                } else {\r\n                    return new Promise((resolve, reject) => {\r\n                        fs.writeFile(tsConfigPath, JSON.stringify(tsConfig, null, 2), err => err ? reject(err) : resolve(cfg));\r\n                    });\r\n                }\r\n            });\r\n\r\n        })\r\n        // 5. save/override favicon-config.json file\r\n        .then((cfg: InitConfig) => {\r\n            const appConfig = cfg.angularBuildConfig.apps[0];\r\n            const faviconConfig = cfg.faviconConfig;\r\n            const faviconConfigPath = path\r\n                .resolve(projectRoot, appConfig.root, appConfig.faviconConfig || 'favicon-config.json');\r\n\r\n            return new Promise((resolve, reject) => {\r\n                fs.writeFile(faviconConfigPath,\r\n                    JSON.stringify(faviconConfig, null, 2),\r\n                    err => err ? reject(err) : resolve(cfg));\r\n            });\r\n        })\r\n        // 6. copy polyfills.ts and verdors.ts\r\n        .then((cfg: InitConfig) => {\r\n            const appConfig = cfg.angularBuildConfig.apps[0];\r\n            return checkFileOrDirectoryExistsAsync(path.resolve(projectRoot, appConfig.root, 'polyfills.ts'))\r\n                .then(exists => {\r\n                    if (exists) {\r\n                        return Promise.resolve(cfg);\r\n                    } else {\r\n                        return new Promise((resolve, reject) => {\r\n                            fs.copy(require.resolve('../../templates/polyfills.ts'),\r\n                                path.resolve(projectRoot, appConfig.root, 'polyfills.ts'),\r\n                                err => {\r\n                                    err ? reject(err) : resolve(cfg);\r\n                                });\r\n                        });\r\n                    }\r\n                }).then((cfg: any) => {\r\n                    return checkFileOrDirectoryExistsAsync(path.resolve(projectRoot, appConfig.root, 'vendors.ts'))\r\n                        .then(exists => {\r\n                            if (exists) {\r\n                                return Promise.resolve(cfg);\r\n                            } else {\r\n                                return new Promise((resolve, reject) => {\r\n                                    fs.copy(require.resolve('../../templates/vendors.ts'),\r\n                                        path.resolve(projectRoot, appConfig.root, 'vendors.ts'),\r\n                                        err => {\r\n                                            err ? reject(err) : resolve(cfg);\r\n                                        });\r\n                                });\r\n                            }\r\n                        });\r\n                });\r\n        })\r\n        // 7. Create environments folder\r\n        .then((cfg: InitConfig) => {\r\n            const appConfig = cfg.angularBuildConfig.apps[0];\r\n            const environmentsPath = path.resolve(projectRoot, appConfig.root, 'environments');\r\n            return checkFileOrDirectoryExistsAsync(environmentsPath, true).then(exists => {\r\n                if (exists) {\r\n                    return Promise.resolve(cfg);\r\n                } else {\r\n                    return new Promise((resolve, reject) => {\r\n                        fs.mkdir(environmentsPath, err => err ? reject(err) : resolve(cfg));\r\n                    });\r\n                }\r\n            }\r\n            );\r\n        })\r\n        // 8. Copy environment files\r\n        .then((cfg: InitConfig) => {\r\n            const appConfig = cfg.angularBuildConfig.apps[0];\r\n            return checkFileOrDirectoryExistsAsync(path.resolve(projectRoot, appConfig.root, 'environments', 'environment.ts'))\r\n                .then(exists => {\r\n                    if (exists) {\r\n                        return Promise.resolve(cfg);\r\n                    } else {\r\n                        return new Promise((resolve, reject) => {\r\n                            fs.copy(require.resolve('../../templates/environment.ts'),\r\n                                path.resolve(projectRoot, appConfig.root, 'environments', 'environment.ts'),\r\n                                err => {\r\n                                    err ? reject(err) : resolve(cfg);\r\n                                });\r\n                        });\r\n                    }\r\n                }).then(() => {\r\n                    return checkFileOrDirectoryExistsAsync(path.resolve(projectRoot,\r\n                        appConfig.root,\r\n                        'environments',\r\n                        'environment.prod.ts'))\r\n                        .then(exists => {\r\n                            if (exists) {\r\n                                return Promise.resolve(cfg);\r\n                            } else {\r\n                                return new Promise((resolve, reject) => {\r\n                                    fs.copy(require.resolve('../../templates/environment.prod.ts'),\r\n                                        path.resolve(projectRoot, appConfig.root, 'environments', 'environment.prod.ts'),\r\n                                        err => {\r\n                                            err ? reject(err) : resolve(cfg);\r\n                                        });\r\n                                });\r\n                            }\r\n                        });\r\n                });\r\n        })\r\n        // 9. Update package.json\r\n        .then((cfg: InitConfig) => {\r\n            const appConfig = cfg.angularBuildConfig.apps[0];\r\n            const packageScripts = {\r\n                \"build:dll\": 'cross-env NODE_ENV=development webpack --profile --colors --bail',\r\n                \"prebuilt:dll\": 'npm run clean:dist ',\r\n                \"build:dev\": 'cross-env NODE_ENV=development webpack --profile --colors --bail',\r\n                \"build:prod\": 'cross-env NODE_ENV=production webpack --profile --colors --bail',\r\n                \"build\": 'npm run build:dev',\r\n                \"clean:dist\": `npm run rimraf -- ${appConfig.outDir}`\r\n            };\r\n            cfg.userPackageConfig.scripts = Object.assign({}, cfg.userPackageConfig.scripts || {}, packageScripts);\r\n            return new Promise((resolve, reject) => {\r\n                fs.writeFile(cfg.userPackageConfigFile,\r\n                    JSON.stringify(cfg.userPackageConfig, null, 2),\r\n                    err => err ? reject(err) : resolve(cfg));\r\n            });\r\n        })\r\n        .then((cfg: InitConfig) => {\r\n            if (cfg.cliOptions.commandOptions.linkCli && !cfg.cliOptions.cliIsLocal) {\r\n                return spawnAsync('npm', ['link', '@bizappframework/angular-build', '--color', 'always', '--loglevel', 'error']);\r\n            } else {\r\n                return Promise.resolve(cfg);\r\n            }\r\n        });\r\n}\r\n\r\n// Helpers\r\n//\r\nfunction installToolings(cfg: InitConfig) {\r\n    const projectRoot = cfg.cliOptions.cwd;\r\n\r\n    const preReleasedPackageNames = [\r\n        'extract-text-webpack-plugin',\r\n        'webpack-dev-server',\r\n        'webpack'\r\n    ];\r\n    const depPackagesToInstall: string[] = [];\r\n    const depPackagesToInstallWithSave: string[] = [];\r\n    const devDepPackagesToInstall: string[] = [];\r\n\r\n    const depsSaveList = [\r\n        'reflect-metadata', 'rxjs', 'zone.js', 'core-js', 'ts-helpers', 'tslib', '@angular/compiler', '@angular/core'\r\n    ];\r\n    const devDepsSaveList = ['@angular/compiler-cli', '@ngtools/webpack', 'typescript', 'ts-node'];\r\n    const angularDeps = [\r\n        '@angular/common', '@angular/forms', '@angular/http', '@angular/platform-browser',\r\n        '@angular/platform-browser-dynamic', '@angular/router'\r\n    ];\r\n\r\n\r\n    const depPackages = Object.keys(cfg.cliPackageJsonConfig.dependencies).map((key: string) => {\r\n        const ver = cfg.cliPackageJsonConfig.dependencies[key];\r\n        const isPreReleased = !(preReleasedPackageNames.indexOf(key) === -1);\r\n        return {\r\n            packageName: key,\r\n            version: ver,\r\n            isPreReleased: isPreReleased\r\n        };\r\n    });\r\n    const depSavePackages = depsSaveList.map(key => {\r\n        const ver = cfg.cliPackageJsonConfig.peerDependencies[key];\r\n        const isPreReleased = !(preReleasedPackageNames.indexOf(key) === -1);\r\n        return {\r\n            packageName: key,\r\n            version: ver,\r\n            isPreReleased: isPreReleased\r\n        };\r\n    });\r\n    const devDepSavePackages = devDepsSaveList.map(key => {\r\n        const ver = cfg.cliPackageJsonConfig.peerDependencies[key];\r\n        const isPreReleased = !(preReleasedPackageNames.indexOf(key) === -1);\r\n        return {\r\n            packageName: key,\r\n            version: ver,\r\n            isPreReleased: isPreReleased\r\n        };\r\n    });\r\n\r\n    return checkPackagesToInstall(depSavePackages, projectRoot)\r\n        .then((packageNames: string[]) => depPackagesToInstallWithSave.push(...packageNames))\r\n        .then(() => {\r\n            if (cfg.cliOptions.cliIsLocal) {\r\n                return Promise.resolve(null);\r\n            }\r\n            return checkPackagesToInstall(depPackages, projectRoot)\r\n                .then((packageNames: string[]) => depPackagesToInstall.push(...packageNames));\r\n        })\r\n        .then(() => {\r\n            return checkPackagesToInstall(devDepSavePackages, projectRoot)\r\n                .then((packageNames: string[]) => devDepPackagesToInstall.push(...packageNames));\r\n        }).then(() => {\r\n            if (depPackagesToInstallWithSave.indexOf('@angular/core') > -1) {\r\n                depPackagesToInstallWithSave.push(...angularDeps);\r\n            }\r\n            if (depPackagesToInstallWithSave.length || depPackagesToInstall.length || devDepPackagesToInstall.length) {\r\n                console.log('Installing packages for tooling via npm...');\r\n                return Promise.resolve(0).then(() => {\r\n                    if (!depPackagesToInstallWithSave.length) {\r\n                        return Promise.resolve(0);\r\n                    }\r\n                    return spawnAsync('npm',\r\n                        ['install', '-S', '--color', 'always', '--loglevel', 'error']\r\n                            .concat(depPackagesToInstallWithSave));\r\n                })\r\n                    .then(() => {\r\n                        if (cfg.cliOptions.cliIsLocal || !depPackagesToInstall.length) {\r\n                            return Promise.resolve(0);\r\n                        }\r\n                        return spawnAsync('npm',\r\n                            ['install', '--color', 'always', '--loglevel', 'error'].concat(depPackagesToInstall));\r\n                    }).then(() => {\r\n                        if (!devDepPackagesToInstall.length) {\r\n                            return Promise.resolve(0);\r\n                        }\r\n                        return spawnAsync('npm',\r\n                            ['install', '-D', '--color', 'always', '--loglevel', 'error']\r\n                                .concat(devDepPackagesToInstall)).then(() => {\r\n                                    console.log('Packages were installed.');\r\n                                    return 0;\r\n                                });\r\n                    });\r\n            } else {\r\n                return Promise.resolve(0);\r\n            }\r\n        });\r\n}\r\n\r\nfunction mergeConfigAsync(cfg: InitConfig) {\r\n    return mergeConfigWithPossibleAsync(cfg)\r\n        .then(() => mergeConfigWithAngularCliAsync(cfg))\r\n        .then(() => mergeWithOptions(cfg))\r\n        .then(() => cfg.cliOptions.commandOptions && (cfg.cliOptions.commandOptions.prompt && !cfg.cliOptions.commandOptions.force) ? mergeConfigWithPrompt(cfg) : Promise.resolve(true));\r\n}\r\n\r\nfunction mergeConfigWithPossibleAsync(cfg: InitConfig) {\r\n\r\n    const projectRoot = cfg.cliOptions.cwd;\r\n    const appConfig = cfg.angularBuildConfig.apps[0];\r\n\r\n    const possibleSrcDirs = ['client', 'Client', 'src'];\r\n    const possibleOutDirs = ['wwwroot', 'dist'];\r\n    const possibleMains = ['main.browser.ts', 'main.ts'];\r\n    const possibleStyles = ['styles.scss', 'styles.sass', 'styles.less', 'styles.stylus', 'styles.css'];\r\n    const possibleFavicons = ['logo.svg', 'logo.png', 'favicon.svg', 'favicon.png'];\r\n\r\n    // root\r\n    return findFileOrDirectoryFromPossibleAsync(projectRoot, possibleSrcDirs, appConfig.root, true)\r\n        .then((foundRoot: string) => {\r\n            appConfig.root = foundRoot || appConfig.root;\r\n\r\n            // outDir\r\n            return findFileOrDirectoryFromPossibleAsync(projectRoot, possibleOutDirs, appConfig.outDir, true)\r\n                .then((foundOutDir: string) => {\r\n                    appConfig.outDir = foundOutDir || appConfig.outDir;\r\n                });\r\n        })\r\n        .then(() => {\r\n            // main\r\n            return findFileOrDirectoryFromPossibleAsync(path.resolve(projectRoot, appConfig.root),\r\n                possibleMains,\r\n                appConfig.main,\r\n                false)\r\n                .then((foundMain: string) => {\r\n                    appConfig.main = foundMain || appConfig.main;\r\n                });\r\n        })\r\n        .then(() => {\r\n            // styles\r\n            return findFileOrDirectoryFromPossibleAsync(path.resolve(projectRoot, appConfig.root),\r\n                possibleStyles,\r\n                'styles.scss',\r\n                false)\r\n                .then((foundStyle: string) => {\r\n                    if (foundStyle && appConfig.styles.indexOf(foundStyle) === -1) {\r\n                        appConfig.styles.push(foundStyle);\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            // asset folder\r\n            return findFileOrDirectoryFromPossibleAsync(path.resolve(projectRoot, appConfig.root),\r\n                ['assets'],\r\n                'asset',\r\n                true)\r\n                .then((foundAsset: string) => {\r\n                    if (foundAsset && appConfig.assets.indexOf(foundAsset) === -1) {\r\n                        appConfig.assets.push('assets/**/*');\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            // robots.txt\r\n            return findFileOrDirectoryFromPossibleAsync(path.resolve(projectRoot, appConfig.root),\r\n                ['robots.txt'],\r\n                'robots.txt',\r\n                false)\r\n                .then(foundAsset => {\r\n                    if (foundAsset && appConfig.assets.indexOf(foundAsset) === -1) {\r\n                        appConfig.assets.push(foundAsset);\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            // humans.txt\r\n            return findFileOrDirectoryFromPossibleAsync(path.resolve(projectRoot, appConfig.root),\r\n                ['humans.txt'],\r\n                'humans.txt',\r\n                false)\r\n                .then(foundAsset => {\r\n                    if (foundAsset && appConfig.assets.indexOf(foundAsset) === -1) {\r\n                        appConfig.assets.push(foundAsset);\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            // favicon\r\n            return findFileOrDirectoryFromPossibleAsync(path.resolve(projectRoot, appConfig.root),\r\n                possibleFavicons,\r\n                'logo.svg',\r\n                false)\r\n                .then((foundFavicon: string) => {\r\n                    if (foundFavicon) {\r\n                        cfg.faviconConfig = cfg.faviconConfig ||\r\n                            {\r\n                                masterPicture: foundFavicon\r\n                            };\r\n                        cfg.faviconConfig.masterPicture = foundFavicon;\r\n                        appConfig.faviconConfig = appConfig.faviconConfig || 'favicon-config.json';\r\n                    } else {\r\n                        appConfig.faviconConfig = null;\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            // index\r\n            return findFileOrDirectoryFromPossibleAsync(path.resolve(projectRoot, appConfig.root),\r\n                ['index.html'],\r\n                'index.html',\r\n                false)\r\n                .then((foundIndex: string) => {\r\n                    if (foundIndex) {\r\n                        appConfig.index = foundIndex;\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            // asp.net\r\n            return checkFileOrDirectoryExistsAsync(path.resolve(projectRoot, 'Views', 'Shared'), true)\r\n                .then(exists => exists\r\n                    ? checkFileOrDirectoryExistsAsync(path.resolve(projectRoot, 'wwwroot'), true)\r\n                    : Promise.resolve(false))\r\n                .then(aspNet => {\r\n                    if (aspNet) {\r\n                        appConfig.index = null;\r\n                        appConfig.indexOutFileName = '../Views/Shared/_BundledScripts.cshtml';\r\n                        appConfig.htmlInjectOptions.iconsInjectOutFileName = '../Views/Shared/_FavIcons.cshtml';\r\n                        appConfig.htmlInjectOptions.stylesInjectOutFileName = '../Views/Shared/_BundledStyles.cshtml';\r\n                        appConfig.htmlInjectOptions.customScriptAttributes = { \"asp-append-version\": true };\r\n                        appConfig.htmlInjectOptions.customLinkAttributes = { \"asp-append-version\": true };\r\n                    }\r\n                });\r\n        });\r\n}\r\n\r\nfunction mergeConfigWithAngularCliAsync(cfg: InitConfig) {\r\n    const projectRoot = cfg.cliOptions.cwd;\r\n    const appConfig = cfg.angularBuildConfig.apps[0];\r\n    const cliPath = path.resolve(projectRoot, 'angular-cli.json');\r\n\r\n    return checkFileOrDirectoryExistsAsync(cliPath).then((exists: boolean) => {\r\n        if (exists) {\r\n            return readJsonAsync(cliPath).then((cliConfig: any) => {\r\n                cliConfig = cliConfig || {};\r\n                cliConfig.apps = cliConfig.apps || [];\r\n                const cliAppConfig = cliConfig.apps[0] || {};\r\n                if (cliAppConfig.root) {\r\n                    cfg.angularCliConfigFileExists = true;\r\n                    cfg.userAngularCliConfig = cliConfig;\r\n                }\r\n                appConfig.root = cliAppConfig.root || appConfig.root;\r\n                appConfig.outDir = cliAppConfig.outDir || appConfig.outDir;\r\n                appConfig.main = cliAppConfig.main || appConfig.main;\r\n                appConfig.test = cliAppConfig.test || appConfig.test;\r\n                appConfig.tsconfig = cliAppConfig.tsconfig || appConfig.tsconfig;\r\n                appConfig.index = cliAppConfig.index || appConfig.index;\r\n                if (cliAppConfig.assets && cliAppConfig.assets.length) {\r\n                    appConfig.assets = cliAppConfig.assets;\r\n                }\r\n                if (cliAppConfig.scripts && cliAppConfig.scripts.length) {\r\n                    appConfig.scripts = cliAppConfig.scripts;\r\n                }\r\n                if (cliAppConfig.styles && cliAppConfig.styles.length) {\r\n                    appConfig.styles = cliAppConfig.styles;\r\n                }\r\n                if (cliAppConfig.environments && Object.keys(cliAppConfig.environments).length) {\r\n                    appConfig.environments = cliAppConfig.environments;\r\n                }\r\n\r\n            });\r\n        } else {\r\n            return Promise.resolve(null);\r\n        }\r\n    });\r\n}\r\n\r\nfunction mergeWithOptions(cfg: InitConfig) {\r\n    const commandOptions = cfg.cliOptions.commandOptions || {};\r\n    const appConfig = cfg.angularBuildConfig.apps[0];\r\n\r\n    if (typeof commandOptions.useAngularCliConfigFile !== undefined) {\r\n        cfg.useAngularCliConfigFile = commandOptions.useAngularCliConfigFile !== false &&\r\n            commandOptions.useAngularCliConfigFile !== 'no';\r\n    } else if (cfg.angularCliConfigFileExists) {\r\n        cfg.useAngularCliConfigFile = true;\r\n    }\r\n    cfg.webpackConfigFileName = commandOptions.webpackConfigFileName || cfg.webpackConfigFileName;\r\n    if (commandOptions.faviconMasterPicture) {\r\n        cfg.faviconConfig = cfg.faviconConfig ||\r\n            {\r\n                masterPicture: commandOptions.faviconMasterPicture\r\n            };\r\n        cfg.faviconConfig.masterPicture = commandOptions.faviconMasterPicture;\r\n        appConfig.faviconConfig = appConfig.faviconConfig || 'favicon-config.json';\r\n    }\r\n\r\n    cfg.overrideAngularBuildConfigFile = commandOptions.overrideAngularBuildConfigFile ||\r\n        cfg.overrideAngularBuildConfigFile;\r\n    cfg.overrideWebpackConfigFile = commandOptions.overrideWebpackConfigFile || cfg.overrideWebpackConfigFile;\r\n\r\n    appConfig.root = commandOptions.root || appConfig.root;\r\n    appConfig.outDir = commandOptions.outDir || appConfig.outDir;\r\n    appConfig.publicPath = commandOptions.publicPath || appConfig.publicPath;\r\n    appConfig.main = commandOptions.main || appConfig.main;\r\n    appConfig.test = commandOptions.test || appConfig.test;\r\n    appConfig.tsconfig = commandOptions.tsconfig || appConfig.tsconfig;\r\n    appConfig.index = commandOptions.index || appConfig.index;\r\n    appConfig.indexOutFileName = commandOptions.indexOutFileName || appConfig.indexOutFileName;\r\n    appConfig.faviconConfig = commandOptions.faviconConfig || appConfig.faviconConfig;\r\n    if (typeof commandOptions.referenceDllOnDevelopment !== 'undefined') {\r\n        // ReSharper disable once CoercedEqualsUsing\r\n        appConfig.referenceDllsOnDevelopment = commandOptions.referenceDllOnDevelopment == true;\r\n    }\r\n    if (typeof commandOptions.referenceDllOnProduction !== 'undefined') {\r\n        // ReSharper disable once CoercedEqualsUsing\r\n        appConfig.referenceDllsOnProduction = commandOptions.referenceDllOnProduction == true;\r\n    }\r\n    if (typeof commandOptions.tryBundleDlls !== 'undefined') {\r\n        // ReSharper disable once CoercedEqualsUsing\r\n        appConfig.tryBundleDlls = commandOptions.tryBundleDlls == true;\r\n    }\r\n\r\n    if (commandOptions.dlls && commandOptions.dlls.length && Array.isArray(commandOptions.dlls)) {\r\n        appConfig.dlls = commandOptions.dlls;\r\n    }\r\n\r\n    if (commandOptions.styles && commandOptions.styles.length && Array.isArray(commandOptions.styles)) {\r\n        commandOptions.styles.forEach((style:string) => {\r\n            style = style.trim();\r\n            if (appConfig.styles.indexOf(style) === -1) {\r\n                appConfig.styles.push(style);\r\n            }\r\n        });\r\n    }\r\n    if (commandOptions.scripts && commandOptions.scripts.length && Array.isArray(commandOptions.scripts)) {\r\n        commandOptions.scripts.forEach((script: string) => {\r\n            script = script.trim();\r\n            if (appConfig.scripts.indexOf(script) === -1) {\r\n                appConfig.scripts.push(script);\r\n            }\r\n        });\r\n    }\r\n    if (commandOptions.assets && commandOptions.assets.length && Array.isArray(commandOptions.assets)) {\r\n        commandOptions.assets.forEach((asset: string) => {\r\n            asset = asset.trim();\r\n            if (appConfig.assets.indexOf(asset) === -1) {\r\n                appConfig.assets.push(asset);\r\n            }\r\n        });\r\n    }\r\n    if (commandOptions.provide && typeof commandOptions.provide === 'object') {\r\n        appConfig.provide = commandOptions.provide;\r\n    }\r\n    if (commandOptions.htmlInjectOptions && typeof commandOptions.htmlInjectOptions === 'object') {\r\n        appConfig.htmlInjectOptions = Object.assign({}, appConfig.htmlInjectOptions, commandOptions.htmlInjectOptions);\r\n    }\r\n    if (commandOptions.environments && typeof commandOptions.environments === 'object') {\r\n        appConfig.environments = Object.assign({}, appConfig.environments, commandOptions.environments);\r\n    }\r\n    return cfg;\r\n}\r\n\r\nfunction mergeConfigWithPrompt(cfg: InitConfig) {\r\n    const projectRoot = cfg.cliOptions.cwd;\r\n    const appConfig = cfg.angularBuildConfig.apps[0];\r\n\r\n    return checkFileOrDirectoryExistsAsync(path.resolve(projectRoot, 'angular-build.json'))\r\n        .then((exists: boolean) => {\r\n            if (exists) {\r\n                cfg.angularBuildConfigFileExists = true;\r\n                if (cfg.useAngularCliConfigFile) {\r\n                    return Promise.resolve(null);\r\n                }\r\n                if (cfg.overrideAngularBuildConfigFile) {\r\n                    return Promise.resolve(null);\r\n                }\r\n                return askAsync(chalk.bgYellow('WARNING:') +\r\n                    ` Override 'angular-build.json' yes/no (${cfg.overrideAngularBuildConfigFile ? 'yes' : 'no'})?: `)\r\n                    .then((answer: string) => {\r\n                        if (answer &&\r\n                            answer.trim() &&\r\n                            (answer.trim().toLowerCase() === 'yes' ||\r\n                                answer.trim().toLowerCase() === 'y')) {\r\n                            cfg.overrideAngularBuildConfigFile = true;\r\n                        }\r\n                    });\r\n            } else {\r\n                return Promise.resolve(null);\r\n            }\r\n        })\r\n        .then(() => {\r\n            if (cfg.angularCliConfigFileExists && !cfg.useAngularCliConfigFile && !cfg.overrideAngularBuildConfigFile) {\r\n                return askAsync(`Use 'angular-cli.json' as a build config yes/no (${cfg.useAngularCliConfigFile ? 'yes' : 'no'})?: `)\r\n                    .then((answer: string) => {\r\n                        if (answer &&\r\n                            answer.trim() &&\r\n                            (answer.trim().toLowerCase() === 'yes' ||\r\n                                answer.trim().toLowerCase() === 'y')) {\r\n                            cfg.useAngularCliConfigFile = true;\r\n                        }\r\n                    });\r\n            } else {\r\n                return Promise.resolve(null);\r\n            }\r\n        })\r\n        .then(() => {\r\n            const possibleWebpackFiles = [\r\n                'webpackfile.ts', 'webpackfile.babel.js', 'webpackfile.js', 'webpack.config.ts', 'webpack.config.babel.js',\r\n                'webpack.config.js'\r\n            ];\r\n            if (cfg.webpackConfigFileName && possibleWebpackFiles.indexOf(cfg.webpackConfigFileName) === -1) {\r\n                possibleWebpackFiles.unshift(cfg.webpackConfigFileName);\r\n            }\r\n\r\n            return findFileOrDirectoryFromPossibleAsync(projectRoot,\r\n                possibleWebpackFiles,\r\n                cfg.webpackConfigFileName || 'webpack.config.js').then((foundName: string) => {\r\n                    if (foundName && (!cfg.webpackConfigFileName || foundName === cfg.webpackConfigFileName)) {\r\n                        cfg.webpackConfigFileExists = true;\r\n                        cfg.webpackConfigFileName = foundName;\r\n                        if (cfg.overrideWebpackConfigFile) {\r\n                            return Promise.resolve(null);\r\n                        }\r\n                        return askAsync(chalk.bgYellow('WARNING:') +\r\n                            ` Override '${foundName}' yes/no (${cfg.overrideWebpackConfigFile ? 'yes' : 'no'})?: `)\r\n                            .then((answer: string) => {\r\n                                if (answer &&\r\n                                    answer.trim() &&\r\n                                    (answer.trim().toLowerCase() === 'yes' ||\r\n                                        answer.trim().toLowerCase() === 'y')) {\r\n                                    cfg.overrideWebpackConfigFile = true;\r\n                                }\r\n                            });\r\n                    } else {\r\n                        return Promise.resolve(null);\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            if (cfg.cliOptions.commandOptions.root) {\r\n                return Promise.resolve(null);\r\n            }\r\n            return askAsync(`Enter client app root folder (${appConfig.root}): `)\r\n                .then((answer: string) => {\r\n                    if (answer && answer.trim()) {\r\n                        appConfig.root = answer.trim();\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            if (cfg.cliOptions.commandOptions.outDir) {\r\n                return Promise.resolve(null);\r\n            }\r\n            return askAsync(`Enter build output folder (${appConfig.outDir}): `)\r\n                .then((answer: string) => {\r\n                    if (answer && answer.trim()) {\r\n                        appConfig.outDir = answer.trim();\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            if (cfg.cliOptions.commandOptions.publicPath) {\r\n                return Promise.resolve(null);\r\n            }\r\n            return askAsync(`Enter public path (${appConfig.publicPath}): `)\r\n                .then((answer: string) => {\r\n                    if (answer && answer.trim()) {\r\n                        appConfig.publicPath = answer.trim();\r\n                        if (!appConfig.publicPath.endsWith('/')) {\r\n                            appConfig.publicPath += '/';\r\n                        }\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            if (cfg.cliOptions.commandOptions.main) {\r\n                return Promise.resolve(null);\r\n            }\r\n            return askAsync(`Enter app bootstrap main file (${appConfig.main || ''}): `)\r\n                .then((answer: string) => {\r\n                    if (answer && answer.trim()) {\r\n                        appConfig.main = answer.trim();\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            if (cfg.cliOptions.commandOptions.styles && cfg.cliOptions.commandOptions.styles.length && Array.isArray(cfg.cliOptions.commandOptions.styles)) {\r\n                return Promise.resolve(null);\r\n            }\r\n            return askAsync(`Enter css/scss/less/stylus global style files (${appConfig.styles.join(', ')}): `)\r\n                .then((answer: string) => {\r\n                    if (answer && answer.trim().length) {\r\n                        answer = answer.trim();\r\n                        const answerArray = answer.split(',');\r\n                        answerArray.forEach(style => {\r\n                            style = style.trim();\r\n                            if (appConfig.styles.indexOf(style) === -1) {\r\n                                appConfig.styles.push(style);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            if (cfg.cliOptions.commandOptions.faviconMasterPicture) {\r\n                return Promise.resolve(null);\r\n            }\r\n            return askAsync(`Enter favicon master logo file (${cfg.faviconConfig.masterPicture\r\n                ? cfg.faviconConfig.masterPicture\r\n                : ''}): `)\r\n                .then((answer: string) => {\r\n                    if (answer && answer.trim()) {\r\n                        answer = answer.trim();\r\n                        cfg.faviconConfig = cfg.faviconConfig ||\r\n                            {\r\n                                masterPicture: answer\r\n                            };\r\n                        cfg.faviconConfig.masterPicture = answer;\r\n                        appConfig.faviconConfig = appConfig.faviconConfig || 'favicon-config.json';\r\n                    }\r\n                });\r\n        })\r\n        .then(() => {\r\n            if (cfg.cliOptions.commandOptions.overrideWebpackConfigFile || cfg.cliOptions.commandOptions.webpackConfigFileExists) {\r\n                return Promise.resolve(null);\r\n            }\r\n            return askAsync(`Enter webpack config file name (${cfg.webpackConfigFileName || 'webpack.config.js'}): `)\r\n                .then((answer: string) => {\r\n                    if (answer && answer.trim()) {\r\n                        cfg.webpackConfigFileName = answer.trim();\r\n                    }\r\n                });\r\n        });\r\n\r\n}\r\n\r\nfunction checkPackagesToInstall(packagesToCheck: PackageToCheck[], projectRoot: string) {\r\n    const tasks = packagesToCheck.map((pkgToCheck: PackageToCheck) => {\r\n        return new Promise(res => {\r\n            resolve(pkgToCheck.packageName, { basedir: projectRoot }, (error, resolvedPath) => {\r\n                if (error) {\r\n                    res(pkgToCheck);\r\n                } else {\r\n                    pkgToCheck.resolvedPath = resolvedPath;\r\n                    res(pkgToCheck);\r\n                }\r\n            });\r\n        }).then((packageObj: any) => {\r\n            if (packageObj.resolvedPath && packageObj.version) {\r\n                const versionRange = semver.validRange(packageObj.version);\r\n                return getVersionfromPackageJsonAsync(path.resolve(projectRoot, 'node_modules', packageObj.packageName)).then((localVer: string) => {\r\n                    if (localVer && semver.satisfies(localVer, versionRange)) {\r\n                        return null;\r\n                    }\r\n                    if (packageObj.isPreReleased) {\r\n                        return Promise.resolve(packageObj.packageName + '@' + packageObj.version);\r\n                    } else {\r\n                        return Promise.resolve(packageObj.packageName);\r\n                    }\r\n                });\r\n            } else {\r\n                if (packageObj.isPreReleased) {\r\n                    return Promise.resolve(packageObj.packageName + '@' + packageObj.version);\r\n                } else {\r\n                    return Promise.resolve(packageObj.packageName);\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    return Promise.all(tasks).then(packages => packages.filter(p => p !== null));\r\n}"]}