{"version":3,"file":"suppress-entry-chunks-webpack-plugin.js","sourceRoot":"","sources":["../../../src/plugins/suppress-entry-chunks-webpack-plugin/suppress-entry-chunks-webpack-plugin.ts"],"names":[],"mappings":"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","sourcesContent":["// Ref: angular-cli - https://github.com/angular/angular-cli/blob/master/packages/angular-cli/plugins/suppress-entry-chunks-webpack-plugin.ts\r\n\r\n// ExtractTextPlugin leaves behind the entry points, which we might not need anymore\r\n// if they were entirely css. This plugin removes those entry points.\r\n\r\n// ReSharper disable once InconsistentNaming\r\nexport interface SuppressEntryChunksPluginOptions {\r\n  chunks?: string[];\r\n  supressPattern?: RegExp;\r\n  targetHtmlWebpackPluginId?: string;\r\n  assetTagsFilterFunc?: (tag: any) => boolean;\r\n}\r\n\r\nexport class SuppressEntryChunksWebpackPlugin {\r\n  private isTargetHtmlWebpackPlugin = false;\r\n\r\n  constructor(private readonly  options: SuppressEntryChunksPluginOptions) {\r\n    if (!options) {\r\n      throw new ReferenceError(`'options' cannot be null or undefined.`);\r\n    }\r\n  }\r\n\r\n  apply(compiler: any): void {\r\n\r\n    compiler.plugin('compilation', (compilation: any) => {\r\n\r\n      compilation.plugin('after-seal', (callback: any) => {\r\n        this.supressAssets(compilation, callback);\r\n      });\r\n\r\n      if (this.options.assetTagsFilterFunc) {\r\n        compilation.plugin('html-webpack-plugin-alter-asset-tags',\r\n          (htmlPluginArgs: any, callback: any) => {\r\n\r\n            if (!this.options.targetHtmlWebpackPluginId ||\r\n              (this.options.targetHtmlWebpackPluginId &&\r\n                this.options.targetHtmlWebpackPluginId === htmlPluginArgs.plugin.options.id)) {\r\n              this.isTargetHtmlWebpackPlugin = true;\r\n            } else {\r\n              this.isTargetHtmlWebpackPlugin = false;\r\n            }\r\n            if (!this.isTargetHtmlWebpackPlugin) {\r\n              return callback(null, htmlPluginArgs);\r\n            }\r\n\r\n\r\n            const filterFn = this.options.assetTagsFilterFunc;\r\n            htmlPluginArgs.head = htmlPluginArgs.head.filter(filterFn);\r\n            htmlPluginArgs.body = htmlPluginArgs.body.filter(filterFn);\r\n            return callback(null, htmlPluginArgs);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  supressAssets(compilation: any, callback: any) {\r\n    if (!this.options.chunks || !this.options.supressPattern) {\r\n      callback();\r\n      return;\r\n    }\r\n    compilation.chunks.filter((chunk: any) => this.options.chunks.indexOf(chunk.name) !== -1)\r\n      .forEach((chunk: any) => {\r\n        const newFiles: string[] = [];\r\n        chunk.files.forEach((file: string) => {\r\n          if (file.match(this.options.supressPattern)) {\r\n            delete compilation.assets[file];\r\n          } else {\r\n            newFiles.push(file);\r\n          }\r\n        });\r\n        chunk.files = newFiles;\r\n      });\r\n    callback();\r\n    return;\r\n  }\r\n}\r\n"]}