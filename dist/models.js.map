{"version":3,"file":"models.js","sourceRoot":"","sources":["../src/models.ts"],"names":[],"mappings":"","sourcesContent":["export interface AppConfig {\r\n  root?: string;\r\n  outDir?: string;\r\n  main?: string;\r\n  assets?: any;\r\n  styles?: string[];\r\n  scripts?: string[];\r\n  environments?: any;\r\n  test?: string;\r\n\r\n  index?: string;\r\n  indexOutFileName?: string;\r\n  htmlInjectOptions?: HtmlInjectOptions;\r\n\r\n  faviconConfig?: string | {\r\n    masterPicture: any;\r\n  };\r\n\r\n  publicPath?: string;\r\n\r\n  name?: string;\r\n  extends?: string,\r\n  target?: string;\r\n  enabled?: boolean;\r\n  skipOnDllBuild?: boolean;\r\n\r\n  appendHashVersionOnDevelopment?: boolean;\r\n  appendHashVersionOnProduction?: boolean;\r\n  compressAssetsOnProduction?: boolean;\r\n\r\n  provide: { [key: string]: string };\r\n\r\n  // dll\r\n  referenceDllOnDevelopment?: boolean;\r\n  referenceDllOnProduction?: boolean;\r\n  tryBuildDll?: boolean;\r\n  tryBuildDllCommand?: string;\r\n  tryBuildDllCommandArgs?: string[];\r\n  dllEntryChunkName?: string;\r\n  dlls?: DllEntry[] | string[];\r\n  importPolyfillsToMain?: boolean;\r\n\r\n  tsconfig?: string;\r\n}\r\n\r\nexport interface HtmlInjectOptions {\r\n  stylesInjectOutFileName?: string;\r\n  iconsInjectOutFileName?: string;\r\n\r\n  customScriptAttributes?: { [key: string]: any };\r\n  customLinkAttributes: { [key: string]: any };\r\n}\r\n\r\nexport interface DllEntry {\r\n  entry: string[] | string;\r\n  targets?: string[];\r\n  env?: string;\r\n  isPolyfills?: boolean;\r\n}\r\n\r\nexport interface ExtraEntry {\r\n  input: string;\r\n  output?: string;\r\n  lazy?: boolean;\r\n  path?: string;\r\n  entry?: string;\r\n}\r\n\r\nexport interface BuildOptions {\r\n  progress?: boolean;\r\n  debug?: boolean;\r\n  dll?: boolean;\r\n\r\n\r\n\r\n  copyAssetsOnDllBuild?: boolean;\r\n  generateIconssOnDllBuild?: boolean;\r\n\r\n  sourcemapOnProduction?: boolean;\r\n\r\n  useNameModuleOnDevelopment?: boolean;\r\n\r\n  generateAssetsOnDevelopment?: boolean;\r\n  generateAssetsOnProduction?: boolean;\r\n\r\n  generateStatsOnDevelopment?: boolean;\r\n  generateStatsOnProduction?: boolean;\r\n\r\n  productionReplacementModules?: ReplacementModuleEntry[];\r\n}\r\n\r\nexport interface ReplacementModuleEntry {\r\n  resourceRegExp: string;\r\n  newResource: string;\r\n}\r\n// Angular options\r\nexport interface AngularBuildOptions extends BuildOptions {\r\n  aot?: boolean;\r\n  //replaceHmrOnProduction?: boolean;\r\n}\r\n\r\nexport interface AngularAppConfig extends AppConfig {\r\n  mainAoT?: string;\r\n  // ReSharper disable once InconsistentNaming\r\n  i18nFile?: string;\r\n  // ReSharper disable once InconsistentNaming\r\n  i18nFormat?: string;\r\n  locale?: string;\r\n}"]}