{"version":3,"file":"webpack-angular-config.js","sourceRoot":"","sources":["../../src/webpack/webpack-angular-config.ts"],"names":[],"mappings":"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","sourcesContent":["// Ref: https://webpack.js.org/configuration/\r\n// ReSharper disable InconsistentNaming\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\n\r\n// Webpack built-in plugins\r\nconst ContextReplacementPlugin = require('webpack/lib/ContextReplacementPlugin');\r\nconst NormalModuleReplacementPlugin = require('webpack/lib/NormalModuleReplacementPlugin');\r\nconst LoaderOptionsPlugin = require('webpack/lib/LoaderOptionsPlugin');\r\n\r\n// Typescript plugins\r\n// ReSharper disable CommonJsExternalModule\r\n//import { AotPlugin } from '@ngtools/webpack';\r\nconst AotPlugin = require('@ngtools/webpack').AotPlugin;\r\nconst CheckerPlugin = require('awesome-typescript-loader').CheckerPlugin;\r\nconst TsConfigPathsPlugin = require('awesome-typescript-loader').TsConfigPathsPlugin;\r\nconst NgcWebpackPlugin = require('ngc-webpack').NgcWebpackPlugin;\r\nconst webpackMerge = require('webpack-merge');\r\n// ReSharper restore CommonJsExternalModule\r\n\r\nimport { AngularAppConfig, AngularBuildOptions } from './models';\r\nimport { parseDllEntries } from './helpers';\r\nimport { getWebpackCommonConfig } from './webpack-common-config';\r\n\r\nexport function getWebpackAngularConfig(projectRoot: string, appConfig: AngularAppConfig, buildOptions: AngularBuildOptions) {\r\n    const emptyModulePath = require.resolve('../../empty.js');\r\n    const appRoot = path.resolve(projectRoot, appConfig.root);\r\n\r\n    const plugins: any = [];\r\n\r\n    // Fix angular 2 plugins\r\n    //\r\n    // TODO: to review for aot\r\n    const angular2fixPlugins = [\r\n\r\n        // see:  https://github.com/angular/angular/issues/11580\r\n        new ContextReplacementPlugin(\r\n            // The (\\\\|\\/) piece accounts for path separators in *nix and Windows\r\n            /angular(\\\\|\\/)core(\\\\|\\/)(esm(\\\\|\\/)src|src)(\\\\|\\/)linker/,\r\n            appRoot\r\n        ),\r\n\r\n        new NormalModuleReplacementPlugin(\r\n            /facade(\\\\|\\/)async/,\r\n            path.resolve(projectRoot, 'node_modules/@angular/core/src/facade/async.js')\r\n        ),\r\n        new NormalModuleReplacementPlugin(\r\n            /facade(\\\\|\\/)collection/,\r\n            path.resolve(projectRoot, 'node_modules/@angular/core/src/facade/collection.js')\r\n        ),\r\n        new NormalModuleReplacementPlugin(\r\n            /facade(\\\\|\\/)errors/,\r\n            path.resolve(projectRoot, 'node_modules/@angular/core/src/facade/errors.js')\r\n        ),\r\n        new NormalModuleReplacementPlugin(\r\n            /facade(\\\\|\\/)lang/,\r\n            path.resolve(projectRoot, 'node_modules/@angular/core/src/facade/lang.js')\r\n        ),\r\n        new NormalModuleReplacementPlugin(\r\n            /facade(\\\\|\\/)math/,\r\n            path.resolve(projectRoot, 'node_modules/@angular/core/src/facade/math.js')\r\n        )\r\n    ];\r\n    plugins.push(...angular2fixPlugins);\r\n\r\n    // Production replacement plugins\r\n    //\r\n    if (buildOptions.aot || buildOptions.production) {\r\n        const prodPlugins = [\r\n            new NormalModuleReplacementPlugin(\r\n                /zone\\.js(\\\\|\\/)dist(\\\\|\\/)long-stack-trace-zone/,\r\n                emptyModulePath\r\n            ),\r\n\r\n            // AoT\r\n            // problem with platformUniversalDynamic on the server/client\r\n            new NormalModuleReplacementPlugin(\r\n                /@angular(\\\\|\\/)compiler/,\r\n                emptyModulePath\r\n            ),\r\n\r\n            // AoT\r\n            // new NormalModuleReplacementPlugin(\r\n            //   /@angular(\\\\|\\/)upgrade/,\r\n            //    emptyModulePath\r\n            // ),\r\n            // new NormalModuleReplacementPlugin(\r\n            //   /@angular(\\\\|\\/)platform-browser-dynamic/,\r\n            //    emptyModulePath\r\n            // ),\r\n            // new NormalModuleReplacementPlugin(\r\n            //   /dom(\\\\|\\/)debug(\\\\|\\/)ng_probe/,\r\n            //    emptyModulePath\r\n            // ),\r\n            // new NormalModuleReplacementPlugin(\r\n            //   /dom(\\\\|\\/)debug(\\\\|\\/)by/,\r\n            //    emptyModulePath\r\n            // ),\r\n            // new NormalModuleReplacementPlugin(\r\n            //   /src(\\\\|\\/)debug(\\\\|\\/)debug_node/,\r\n            //    emptyModulePath\r\n            // ),\r\n            // new NormalModuleReplacementPlugin(\r\n            //   /src(\\\\|\\/)debug(\\\\|\\/)debug_renderer/,\r\n            //    emptyModulePath\r\n            // ),\r\n\r\n            new LoaderOptionsPlugin({\r\n                options: {\r\n                    /**\r\n                    * Static analysis linter for TypeScript advanced options configuration\r\n                    * Description: An extensible linter for the TypeScript language.\r\n                    *\r\n                    * See: https://github.com/wbuchwalter/tslint-loader\r\n                    */\r\n                    tslint: {\r\n                        emitErrors: true,\r\n                        failOnHint: true,\r\n                        resourcePath: 'src'\r\n                    },\r\n\r\n                    /**\r\n                     * Html loader advanced options\r\n                     *\r\n                     * See: https://github.com/webpack/html-loader#advanced-options\r\n                     */\r\n                    // TODO: Need to workaround Angular 2's html syntax => #id [bind] (event) *ngFor\r\n                    htmlLoader: {\r\n                        minimize: true,\r\n                        removeAttributeQuotes: false,\r\n                        caseSensitive: true,\r\n                        customAttrSurround: [\r\n                            [/#/, /(?:)/],\r\n                            [/\\*/, /(?:)/],\r\n                            [/\\[?\\(?/, /(?:)/]\r\n                        ],\r\n                        customAttrAssign: [/\\)?\\]?=/]\r\n                    }\r\n\r\n                }\r\n            })\r\n\r\n        ];\r\n\r\n        if (buildOptions.aot) {\r\n            const aotProdPlugins: any[] = [\r\n                // AoT\r\n                // problem with platformUniversalDynamic on the server/client\r\n                //new IgnorePlugin(/@angular(\\\\|\\/)compiler/),\r\n                // Or\r\n                //new NormalModuleReplacementPlugin(\r\n                //    /@angular(\\\\|\\/)compiler/,\r\n                //    emptyModulePath\r\n                //)\r\n\r\n                // AoT\r\n                // new NormalModuleReplacementPlugin(\r\n                //   /@angular(\\\\|\\/)upgrade/,\r\n                //    emptyModulePath\r\n                // ),\r\n                // new NormalModuleReplacementPlugin(\r\n                //   /@angular(\\\\|\\/)platform-browser-dynamic/,\r\n                //    emptyModulePath\r\n                // ),\r\n                // new NormalModuleReplacementPlugin(\r\n                //   /dom(\\\\|\\/)debug(\\\\|\\/)ng_probe/,\r\n                //    emptyModulePath\r\n                // ),\r\n                // new NormalModuleReplacementPlugin(\r\n                //   /dom(\\\\|\\/)debug(\\\\|\\/)by/,\r\n                //    emptyModulePath\r\n                // ),\r\n                // new NormalModuleReplacementPlugin(\r\n                //   /src(\\\\|\\/)debug(\\\\|\\/)debug_node/,\r\n                //    emptyModulePath\r\n                // ),\r\n                // new NormalModuleReplacementPlugin(\r\n                //   /src(\\\\|\\/)debug(\\\\|\\/)debug_renderer/,\r\n                //    emptyModulePath\r\n                // ),\r\n            ];\r\n            prodPlugins.push(...aotProdPlugins);\r\n        }\r\n\r\n        //if (typeof buildOptions.replaceHmrOnProduction === 'undefined' || buildOptions.replaceHmrOnProduction) {\r\n        //  prodPlugins.push(new NormalModuleReplacementPlugin(\r\n        //    /angular2-hmr/,\r\n        //    emptyModulePath\r\n        //  ));\r\n        //}\r\n        plugins.push(...prodPlugins);\r\n\r\n    }\r\n\r\n    const webpackCommonConfig = getWebpackCommonConfig(projectRoot, appConfig, buildOptions);\r\n    if (buildOptions.dll) {\r\n        return webpackMerge(webpackCommonConfig, {\r\n            plugins: plugins\r\n        });\r\n    } else {\r\n        const entryPoints: { [key: string]: string[] } = {};\r\n        if (appConfig.main) {\r\n            const appMain = path.resolve(projectRoot, appConfig.root, appConfig.main);\r\n            const dllParsedResult = parseDllEntries(appRoot, appConfig.dlls, buildOptions.production);\r\n\r\n            if (dllParsedResult && dllParsedResult.entries && dllParsedResult.entries.find(e => e.importToMain)) {\r\n                const entries: string[] = [];\r\n                dllParsedResult.entries.filter(e => e.importToMain).forEach(e => {\r\n                    if (Array.isArray(e.entry)) {\r\n                        entries.push(...e.entry);\r\n                    } else {\r\n                        entries.push(e.entry);\r\n                    }\r\n                });\r\n                entryPoints['main'] = entries.concat([appMain]);\r\n                // TODO: add file deps\r\n            } else {\r\n                entryPoints['main'] = [appMain];\r\n            }\r\n        }\r\n\r\n        const webpackTsConfigPartial = getWebpackTypescriptConfigPartial(projectRoot, appConfig, buildOptions);\r\n        const baseConfig = webpackMerge(webpackCommonConfig, webpackTsConfigPartial);\r\n        return webpackMerge(baseConfig, {\r\n            entry: entryPoints,\r\n            plugins: plugins\r\n        });\r\n    }\r\n}\r\n\r\nexport function getWebpackTypescriptConfigPartial(projectRoot: string, appConfig: AngularAppConfig, buildOptions: AngularBuildOptions) {\r\n    const rules: any[] = [];\r\n    const plugins: any[] = [];\r\n\r\n    let tsConfigPath = path.resolve(projectRoot, appConfig.root, appConfig.tsconfig || 'tsconfig.json');\r\n    if (!fs.existsSync(tsConfigPath)) {\r\n        tsConfigPath = path.resolve(projectRoot, 'tsconfig.json');\r\n    }\r\n    if (!fs.existsSync(tsConfigPath)) {\r\n        tsConfigPath = null;\r\n    }\r\n    const aotResourceOverridePath = require.resolve('../../resource-override.js');\r\n\r\n    // TODO:\r\n    const aotGenDir = path.resolve(projectRoot, appConfig.root, appConfig.aotGenDir || 'ngfactory');\r\n    const useNgToolsWebpack = buildOptions.aot;\r\n\r\n    const tsLoaderExcludes = [/\\.(spec|e2e|e2e-spec)\\.ts$/];\r\n    // TODO:\r\n    const ngToolsWebpackLoader = require.resolve('@ngtools/webpack');\r\n    if (useNgToolsWebpack) {\r\n        const tsRules = [\r\n            {\r\n                test: /\\.ts$/,\r\n                loader: ngToolsWebpackLoader,\r\n                exclude: tsLoaderExcludes\r\n            }\r\n        ];\r\n        rules.push(...tsRules);\r\n    } else {\r\n        const tsRules = [\r\n            {\r\n                test: /\\.ts$/,\r\n                use: [\r\n                    {\r\n                        // TODO:\r\n                        loader: '@angularclass/hmr-loader',\r\n                        options: {\r\n                            pretty: !buildOptions.production,\r\n                            prod: buildOptions.production\r\n                        }\r\n                    },\r\n                    {\r\n                        // MAKE SURE TO CHAIN VANILLA JS CODE, I.E. TS COMPILATION OUTPUT.\r\n                        loader: 'ng-router-loader',\r\n                        options: {\r\n                            loader: 'async-import',\r\n                            genDir: aotGenDir,\r\n                            aot: buildOptions.aot\r\n                        }\r\n                    },\r\n                    {\r\n                        loader: 'awesome-typescript-loader',\r\n                        options: {\r\n                            instance: `at-${appConfig.name || 'app'}-loader`,\r\n                            configFileName: tsConfigPath\r\n                        }\r\n                    },\r\n                    {\r\n                        loader: 'string-replace-loader',\r\n                        options: {\r\n                            search: 'moduleId:\\s*module.id\\s*[,]?',\r\n                            replace: '',\r\n                            flags: 'g'\r\n                        }\r\n                    },\r\n                    {\r\n                        loader: 'angular2-template-loader'\r\n                    }\r\n                ],\r\n                //include: [appRoot]\r\n                exclude: tsLoaderExcludes\r\n            }\r\n        ];\r\n        rules.push(...tsRules);\r\n    }\r\n\r\n    if (useNgToolsWebpack) {\r\n        let excludes = ['**/*.spec.ts'];\r\n        if (appConfig.test) {\r\n            excludes.push(path.join(projectRoot, appConfig.root, appConfig.test));\r\n        };\r\n\r\n        if (buildOptions.aot) {\r\n            const aotPlugin = new AotPlugin({\r\n                // TODO:\r\n                genDir: aotGenDir,\r\n                tsConfigPath: tsConfigPath,\r\n                mainPath: path.join(projectRoot, appConfig.root, appConfig.main),\r\n                i18nFile: appConfig.i18nFile,\r\n                i18nFormat: appConfig.i18nFormat,\r\n                locale: appConfig.locale,\r\n                exclude: excludes\r\n            });\r\n            plugins.push(aotPlugin);\r\n        } else {\r\n            const nonAoTPlugin = new AotPlugin({\r\n                tsConfigPath: tsConfigPath,\r\n                mainPath: path.join(projectRoot, appConfig.root, appConfig.main),\r\n                exclude: excludes,\r\n                skipCodeGeneration: true\r\n            });\r\n            plugins.push(nonAoTPlugin);\r\n        }\r\n    } else {\r\n        const tsPlugins = [\r\n            new CheckerPlugin()\r\n        ];\r\n        if (buildOptions.aot) {\r\n            const aotPlugin = new NgcWebpackPlugin({\r\n                disabled: !buildOptions.aot,\r\n                tsConfig: tsConfigPath,\r\n                resourceOverride: aotResourceOverridePath\r\n            });\r\n            tsPlugins.push(aotPlugin);\r\n        }\r\n        plugins.push(...tsPlugins);\r\n    }\r\n\r\n    //const alias = {};\r\n    //if (fs.existsSync(tsConfigPath)) {\r\n    //    const tsConfigContent = readJsonSync(tsConfigPath);\r\n    //    const compilerOptions = tsConfigContent.compilerOptions || {};\r\n    //    const tsPaths = compilerOptions.paths || {};\r\n    //    for (let prop in tsPaths) {\r\n    //        if (tsPaths.hasOwnProperty(prop)) {\r\n    //            alias[prop] = path.resolve(projectRoot, tsPaths[prop][0]);\r\n    //        }\r\n    //    }\r\n    //}\r\n\r\n\r\n    const tsWebpackConfig = {\r\n        resolve: {\r\n            extensions: ['.ts', '.js', '.json'],\r\n            // alias: alias,\r\n            // Or\r\n            plugins: [\r\n                // TODO: to review\r\n                new TsConfigPathsPlugin({\r\n                    configFileName: tsConfigPath\r\n                })\r\n            ]\r\n        },\r\n        module: {\r\n            rules: rules\r\n        },\r\n        plugins: plugins\r\n    };\r\n\r\n    return tsWebpackConfig;\r\n}"]}