{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../src/webpack/plugins/icon-webpack-plugin/src/utils.ts"],"names":[],"mappings":";AAAA,6BAA6B;AAC7B,yBAAyB;AAEzB,uBAA8B,OAAe;IACzC;;;;;OAKG;IACH,MAAM,MAAM,GAAW,yGAAyG,CAAC;IACjI,IAAI,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QACvD,qCAAqC;QACrC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACL,wCAAwC;YACxC,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACZ,oDAAoD;YACpD,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YACvB,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;YACnD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,EAAE,CAAC;YACd,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,oBAAoB;YACpB,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;IACL,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,MAAM,CAAC;AAClB,CAAC;AA3BD,sCA2BC;AAAA,CAAC;AAEF,sBAA6B,QAAgB;IACzC,MAAM,OAAO,GAAG,aAAa,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3F,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC/B,CAAC;AAHD,oCAGC;AAED,sBAA6B,OAAe;IACxC,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACxD,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC9B,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;IAC3D,CAAC;IACD,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,KAAK,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAC9C,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;IACL,CAAC;IAED,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACxD,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC9B,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;IAC3D,CAAC;IAED,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;IAC1C,CAAC;IAED,MAAM,CAAC,IAAI,CAAC;AAChB,CAAC;AAtBD,oCAsBC","sourcesContent":["import * as path from 'path';\r\nimport * as fs from 'fs';\r\n\r\nexport function stripComments(content: string): string {\r\n    /**\r\n     * First capturing group matches double quoted string\r\n     * Second matches single quotes string\r\n     * Third matches block comments\r\n     * Fourth matches line comments\r\n     */\r\n    const regexp: RegExp = /(\"(?:[^\\\\\\\"]*(?:\\\\.)?)*\")|('(?:[^\\\\\\']*(?:\\\\.)?)*')|(\\/\\*(?:\\r?\\n|.)*?\\*\\/)|(\\/{2,}.*?(?:(?:\\r?\\n)|$))/g;\r\n    let result = content.replace(regexp, (match, m1, m2, m3, m4) => {\r\n        // Only one of m1, m2, m3, m4 matches\r\n        if (m3) {\r\n            // A block comment. Replace with nothing\r\n            return \"\";\r\n        } else if (m4) {\r\n            // A line comment. If it ends in \\r?\\n then keep it.\r\n            let length = m4.length;\r\n            if (length > 2 && m4[length - 1] === \"\\n\") {\r\n                return m4[length - 2] === \"\\r\" ? \"\\r\\n\" : \"\\n\";\r\n            } else {\r\n                return \"\";\r\n            }\r\n        } else {\r\n            // We match a string\r\n            return match;\r\n        }\r\n    });\r\n    return result;\r\n};\r\n\r\nexport function readJsonSync(filePath: string) {\r\n    const context = stripComments(fs.readFileSync(filePath).toString().replace(/^\\uFEFF/, ''));\r\n    return JSON.parse(context);\r\n}\r\n\r\nexport function guessAppName(baseDir: string): string {\r\n    let projectJson = path.resolve(baseDir, 'project.json');\r\n    if (!fs.existsSync(projectJson)) {\r\n        projectJson = path.resolve(baseDir, '../project.json');\r\n    }\r\n    if (fs.existsSync(projectJson)) {\r\n        const title = readJsonSync(projectJson).title;\r\n        if (title && title.length) {\r\n            return title;\r\n        }\r\n    }\r\n\r\n    let packageJson = path.resolve(baseDir, 'package.json');\r\n    if (!fs.existsSync(packageJson)) {\r\n        packageJson = path.resolve(baseDir, '../package.json');\r\n    }\r\n\r\n    if (fs.existsSync(packageJson)) {\r\n        return readJsonSync(packageJson).name;\r\n    }\r\n\r\n    return null;\r\n}\r\n"]}