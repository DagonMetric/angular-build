{"version":3,"file":"icon-loader.js","sourceRoot":"","sources":["../../../../../src/webpack/plugins/icon-webpack-plugin/src/icon-loader.ts"],"names":[],"mappings":"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","sourcesContent":["// Ref: webpack docs - https://webpack.github.io/docs/loaders.html\r\n// Ref: webpack docs - https://webpack.github.io/docs/how-to-write-a-loader.html\r\n// Ref: haydenbleasel/favicons - https://github.com/haydenbleasel/favicons\r\n// Ref: webpack/loader-utils - https://github.com/webpack/loader-utils\r\n// Ref: jantimon/favicons-webpack-plugin - https://github.com/jantimon/favicons-webpack-plugin\r\n\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as crypto from 'crypto';\r\n\r\nconst loaderUtils = require('loader-utils');\r\n//const pluginVersion = require('../package.json').version;\r\nimport { IconLoaderOptions, IconResult, IconFileInfo, IconLoaderResult } from './models';\r\nimport { IconGenerator } from './icon-generator';\r\nimport { guessAppName } from './utils';\r\n\r\n// ReSharper disable once InconsistentNaming\r\nconst PACKAGE_VERSION = '1.0';\r\n\r\n// ReSharper disable once InconsistentNaming\r\nexport interface Loader {\r\n    // version: string;\r\n    //context: string;\r\n    // request: string;\r\n    // data: any;\r\n    // loaders: any[];\r\n    // loaderIndex: number;\r\n    // resourceQuery: string;\r\n    // emitWarning: (message: string) => void;\r\n    // emitError: (message: string) => void;\r\n    // exec\r\n    // resolveSync\r\n    // addContextDependency\r\n    // value\r\n    // inputValue\r\n    // debug\r\n    // minimize\r\n    // sourceMap\r\n    // target\r\n    // webpack\r\n\r\n    cacheable: () => void;\r\n    query: string;\r\n    async: () => (err: Error, source?: any, map?: string) => void;\r\n    resourcePath: string;\r\n    resolve: () => void;\r\n    addDependency: (dep: string) => void;\r\n    clearDependencies: () => void;\r\n    emitFile: (fileName: string, content: Buffer | string, sourceMap?: any) => void;\r\n    options: any;\r\n\r\n    // ReSharper disable once InconsistentNaming\r\n    _compiler: any;\r\n    // ReSharper disable once InconsistentNaming\r\n    _compilation: any;\r\n}\r\n\r\nexport type QueryOptions = IconLoaderOptions;\r\n\r\n// ReSharper disable once InconsistentNaming\r\nexport interface LoaderCachedResult {\r\n    hash: string;\r\n    version: string;\r\n    optionHash: string;\r\n    result: IconLoaderResult;\r\n}\r\n\r\nfunction faviconProcessor(loader: Loader, content: Buffer): void {\r\n    if (!loader.emitFile) {\r\n        throw new Error('emitFile is required from module system');\r\n    }\r\n    if (!loader.async) {\r\n        throw new Error('async is required');\r\n    }\r\n\r\n    if (loader.cacheable) {\r\n        loader.cacheable();\r\n    }\r\n\r\n    const callback = loader.async();\r\n\r\n    const options = <QueryOptions>loaderUtils.parseQuery(loader.query);\r\n    const pathPrefix = loaderUtils.interpolateName(loader, options.iconsPath, {\r\n        context: options.context || loader.options.context,\r\n        content: content,\r\n        regExp: options.regExp\r\n    });\r\n\r\n    const fileHash = loaderUtils.interpolateName(loader, '[hash]', {\r\n        context: options.context || loader.options.context,\r\n        content: content,\r\n        regExp: options.regExp\r\n    });\r\n\r\n    const cacheFile = pathPrefix + '.cache';\r\n    const faviconPersitenceCacheService = new FaviconPersitenceCacheService();\r\n    //const publicPath = getPublicPath(loader._compilation);\r\n\r\n    faviconPersitenceCacheService.loadIconsFromDiskCache(loader, options, cacheFile, fileHash, (err: Error, loaderResult: IconLoaderResult) => {\r\n        if (err) {\r\n            callback(err);\r\n            return;\r\n        }\r\n\r\n        if (loaderResult) {\r\n            callback(null, `module.exports = ${JSON.stringify(loaderResult)}`);\r\n            return;\r\n        }\r\n\r\n        if (!options.appName) {\r\n            options.appName = guessAppName(options.context || loader.options.context);\r\n        }\r\n\r\n        const faviconsGenerator = new IconGenerator();\r\n        // Generate icons\r\n        faviconsGenerator.generateIcons(content, pathPrefix, options.online, options.preferOnline, options, (genErr: any, iconStreamResult: IconResult) => {\r\n            if (genErr) {\r\n                callback(genErr);\r\n                return;\r\n            }\r\n\r\n            const mappedLoaderResult: IconLoaderResult = {\r\n                iconsPath: iconStreamResult.iconsPath,\r\n                html: iconStreamResult.html,\r\n                files: iconStreamResult.files.map((f: IconFileInfo) => iconStreamResult.iconsPath + f.name)\r\n            };\r\n\r\n            iconStreamResult.files.forEach((file: any) => {\r\n                loader.emitFile(pathPrefix + file.name, file.contents);\r\n            });\r\n\r\n            faviconPersitenceCacheService.emitCacheInformationFile(loader, options, cacheFile, fileHash, mappedLoaderResult);\r\n            callback(null, `module.exports = ${JSON.stringify(mappedLoaderResult)}`);\r\n        });\r\n    });\r\n}\r\n\r\n//function getPublicPath(compilation: any): string {\r\n//  let publicPath = compilation.outputOptions.publicPath || '';\r\n//  if (publicPath.length && publicPath.substr(-1) !== '/') {\r\n//    publicPath += '/';\r\n//  }\r\n//  return publicPath;\r\n//}\r\n\r\nexport class FaviconPersitenceCacheService {\r\n    /**\r\n   * Stores the given iconResult together with the control hashes as JSON file\r\n   */\r\n    emitCacheInformationFile(loader: Loader, options: QueryOptions, cacheFile: string, fileHash: string, iconResult: IconLoaderResult): void {\r\n        if (!options.persistentCache) {\r\n            return;\r\n        }\r\n\r\n        const cachedResult: LoaderCachedResult = {\r\n            hash: fileHash,\r\n            version: PACKAGE_VERSION,\r\n            optionHash: this.generateHashForOptions(options),\r\n            result: iconResult\r\n        };\r\n\r\n        loader.emitFile(cacheFile, JSON.stringify(cachedResult));\r\n    }\r\n\r\n    /**\r\n     * Checks if the given cache object is still valid\r\n     */\r\n    isCacheValid(cache: LoaderCachedResult, fileHash: string, options: QueryOptions): boolean {\r\n        // Verify that the source file is the same\r\n        return cache.hash === fileHash &&\r\n            // Verify that the options are the same\r\n            cache.optionHash === this.generateHashForOptions(options) &&\r\n            // Verify that the favicons version of the cache maches this version\r\n            cache.version === PACKAGE_VERSION;\r\n    }\r\n\r\n    /**\r\n     * Try to load the file from the disc cache\r\n     */\r\n    loadIconsFromDiskCache(loader: Loader, options: QueryOptions, cacheFile: string, fileHash: string, cb: (err: Error, result?: IconLoaderResult) => void): void {\r\n        // Stop if cache is disabled\r\n        if (!options.persistentCache) {\r\n            cb(null);\r\n            return;\r\n        }\r\n\r\n        const resolvedCacheFile = path.resolve(loader._compiler.parentCompilation\r\n            ? loader._compiler.parentCompilation.compiler.outputPath\r\n            : loader._compiler.outputPath,\r\n            cacheFile);\r\n\r\n        fs.exists(resolvedCacheFile,\r\n            (exists: boolean) => {\r\n                if (!exists) {\r\n                    cb(null);\r\n                    return;\r\n                }\r\n\r\n                fs.readFile(resolvedCacheFile,\r\n                    (err: Error, content: any) => {\r\n                        if (err) {\r\n                            cb(err);\r\n                            return;\r\n                        }\r\n\r\n                        try {\r\n                            const cache: LoaderCachedResult = JSON.parse(content);\r\n                            // Bail out if the file or the option changed\r\n                            if (!this.isCacheValid(cache, fileHash, options)) {\r\n                                cb(null);\r\n                                return;\r\n                            }\r\n                            cb(null, cache.result);\r\n                        } catch (e) {\r\n                            cb(e);\r\n                            return;\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Generates a md5 hash for the given options\r\n     */\r\n    generateHashForOptions(options: QueryOptions): string {\r\n        const hash = crypto.createHash('md5');\r\n        hash.update(JSON.stringify(options));\r\n        return hash.digest('hex');\r\n    }\r\n}\r\n\r\n// ReSharper disable once CommonJsExternalModule\r\nmodule.exports = function (content: any) {\r\n    try {\r\n        faviconProcessor.call(undefined, this, content);\r\n    } catch (e) {\r\n        console.error(e, e.stack);\r\n        throw e;\r\n    }\r\n}\r\nmodule.exports.raw = true;\r\n"]}