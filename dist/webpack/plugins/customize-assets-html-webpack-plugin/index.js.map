{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/webpack/plugins/customize-assets-html-webpack-plugin/index.ts"],"names":[],"mappings":"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","sourcesContent":["export class CustomizeAssetsHtmlPluginOptions {\r\n    targetHtmlWebpackPluginId?: string;\r\n\r\n    clearHeadAssets?: boolean;\r\n    clearBodyAssets?: boolean;\r\n    moveHeadAssetsToBody?: boolean;\r\n    moveBodyAssetsToHead?: boolean;\r\n\r\n    cssSrcToHeadAssets?: string[];\r\n    scriptSrcToHeadAssets?: string[];\r\n\r\n    cssSrcToBodyAssets?: string[];\r\n    scriptSrcToBodyAssets?: string[];\r\n\r\n    addPublicPath?: boolean;\r\n\r\n    // filter\r\n    assetTagsFilterFunc?: (tag: any) => boolean;\r\n\r\n    // attributes\r\n    customScriptAttributes?: { [key: string]: string };\r\n    customLinkAttributes?: { [key: string]: string };\r\n\r\n    removeStartingSlash?: boolean;\r\n}\r\n\r\nexport class CustomizeAssetsHtmlWebpackPlugin {\r\n    private publicPath = '';\r\n    private isTargetHtmlWebpackPlugin = false;\r\n\r\n    constructor(private readonly options: CustomizeAssetsHtmlPluginOptions) { }\r\n\r\n    apply(compiler: any): void {\r\n        compiler.plugin('compilation',\r\n            (compilation: any) => {\r\n\r\n                compilation.plugin('html-webpack-plugin-before-html-generation',\r\n                    (htmlPluginArgs: any, callback: any) => {\r\n\r\n                        if (!this.options.targetHtmlWebpackPluginId ||\r\n                            (this.options.targetHtmlWebpackPluginId &&\r\n                                this.options.targetHtmlWebpackPluginId === htmlPluginArgs.plugin.options.id)) {\r\n                            this.isTargetHtmlWebpackPlugin = true;\r\n                        } else {\r\n                            this.isTargetHtmlWebpackPlugin = false;\r\n                        }\r\n                        if (!this.isTargetHtmlWebpackPlugin) {\r\n                            return callback(null, htmlPluginArgs);\r\n                        }\r\n\r\n                        let publicPath = '';\r\n                        if (htmlPluginArgs.assets && htmlPluginArgs.assets.publicPath && htmlPluginArgs.assets.publicPath !== '/') {\r\n                            publicPath = htmlPluginArgs.assets.publicPath;\r\n                            const endsWithBsRegex = /\\/$/;\r\n                            const startWithBsRegex = /^\\/\\w/;\r\n                            publicPath = endsWithBsRegex.test(publicPath) ? publicPath : publicPath + '/';\r\n                            publicPath = startWithBsRegex.test(publicPath) ? publicPath.substring(1) : publicPath;\r\n                        }\r\n                        this.publicPath = publicPath;\r\n\r\n                        const customCss: string[] = [];\r\n                        const customScripts: string[] = [];\r\n\r\n                        if (this.options.cssSrcToHeadAssets && this.options.cssSrcToHeadAssets.length) {\r\n                            this.options.cssSrcToHeadAssets.forEach((css: string) => {\r\n                                css = (this.options.addPublicPath && this.publicPath) ? this.publicPath + css : css;\r\n                                customCss.push(css);\r\n                            });\r\n                        }\r\n                        if (this.options.scriptSrcToHeadAssets && this.options.scriptSrcToHeadAssets.length) {\r\n                            this.options.scriptSrcToHeadAssets.forEach((script: string) => {\r\n                                script = (this.options.addPublicPath && this.publicPath) ? this.publicPath + script : script;\r\n                                customScripts.push(script);\r\n                            });\r\n                        }\r\n\r\n                        // body\r\n                        if (this.options.cssSrcToBodyAssets && this.options.cssSrcToBodyAssets.length) {\r\n                            this.options.cssSrcToBodyAssets.forEach((css: string) => {\r\n                                css = (this.options.addPublicPath && this.publicPath) ? this.publicPath + css : css;\r\n                                customCss.push(css);\r\n                            });\r\n                        }\r\n                        if (this.options.scriptSrcToBodyAssets && this.options.scriptSrcToBodyAssets.length) {\r\n                            this.options.scriptSrcToBodyAssets.forEach((script: string) => {\r\n                                script = (this.options.addPublicPath && this.publicPath) ? this.publicPath + script : script;\r\n                                customScripts.push(script);\r\n                            });\r\n                        }\r\n                        htmlPluginArgs.plugin.options.customCss = htmlPluginArgs.plugin.options.customCss || [];\r\n                        htmlPluginArgs.plugin.options.customScripts = htmlPluginArgs.plugin.options.customScripts || [];\r\n                        htmlPluginArgs.plugin.options.customCss.push(...customCss);\r\n                        htmlPluginArgs.plugin.options.customScripts.push(...customScripts);\r\n\r\n                        return callback(null, htmlPluginArgs);\r\n                    });\r\n\r\n                compilation.plugin('html-webpack-plugin-alter-asset-tags',\r\n                    (htmlPluginArgs: any, callback: any) => {\r\n\r\n                        if (!this.isTargetHtmlWebpackPlugin) {\r\n                            return callback(null, htmlPluginArgs);\r\n                        }\r\n                        // add\r\n                        //if (this.options.customHeadTags) {\r\n                        //  htmlPluginArgs.head = this.options.customHeadTagsUnshift\r\n                        //    ? this.options.customHeadTags.concat(htmlPluginArgs.head)\r\n                        //    : htmlPluginArgs.head.concat(this.options.customHeadTags);\r\n                        //}\r\n                        //if (this.options.customBodyTags) {\r\n                        //  htmlPluginArgs.body = this.options.customBodyTagsUnshift\r\n                        //    ? this.options.customBodyTags.concat(htmlPluginArgs.body)\r\n                        //    : htmlPluginArgs.body.concat(this.options.customBodyTags);\r\n                        //}\r\n                        // head\r\n                        const headEntries: any[] = [];\r\n                        if (this.options.cssSrcToHeadAssets && this.options.cssSrcToHeadAssets.length) {\r\n                            this.options.cssSrcToHeadAssets.forEach((css: string) => {\r\n                                css = (this.options.addPublicPath && this.publicPath) ? this.publicPath + css : css;\r\n                                headEntries.push({\r\n                                    tagName: 'link',\r\n                                    closeTag: true,\r\n                                    attributes: { href: css }\r\n                                });\r\n                            });\r\n                        }\r\n                        if (this.options.scriptSrcToHeadAssets && this.options.scriptSrcToHeadAssets.length) {\r\n                            this.options.scriptSrcToHeadAssets.forEach((script: string) => {\r\n                                script = (this.options.addPublicPath && this.publicPath) ? this.publicPath + script : script;\r\n                                headEntries.push({\r\n                                    tagName: 'script',\r\n                                    closeTag: true,\r\n                                    attributes: {\r\n                                        type: 'text/javascript',\r\n                                        src: script\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        if (headEntries.length) {\r\n                            htmlPluginArgs.head = headEntries.concat(htmlPluginArgs.head);\r\n                        }\r\n                        // body\r\n                        const bodyEntries: any[] = [];\r\n                        if (this.options.cssSrcToBodyAssets && this.options.cssSrcToBodyAssets.length) {\r\n                            this.options.cssSrcToBodyAssets.forEach((css: string) => {\r\n                                css = (this.options.addPublicPath && this.publicPath) ? this.publicPath + css : css;\r\n                                bodyEntries.push({\r\n                                    tagName: 'link',\r\n                                    closeTag: true,\r\n                                    attributes: { href: css }\r\n                                });\r\n                            });\r\n                        }\r\n                        if (this.options.scriptSrcToBodyAssets && this.options.scriptSrcToBodyAssets.length) {\r\n                            this.options.scriptSrcToBodyAssets.forEach((script: string) => {\r\n                                script = (this.options.addPublicPath && this.publicPath) ? this.publicPath + script : script;\r\n                                bodyEntries.push({\r\n                                    tagName: 'script',\r\n                                    closeTag: true,\r\n                                    attributes: {\r\n                                        type: 'text/javascript',\r\n                                        src: script\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        if (bodyEntries.length) {\r\n                            htmlPluginArgs.body = bodyEntries.concat(htmlPluginArgs.body);\r\n                        }\r\n\r\n                        // filter\r\n                        if (this.options.assetTagsFilterFunc) {\r\n                            const filterFn = this.options.assetTagsFilterFunc;\r\n                            htmlPluginArgs.head = htmlPluginArgs.head.filter(filterFn);\r\n                            htmlPluginArgs.body = htmlPluginArgs.body.filter(filterFn);\r\n                        }\r\n\r\n                        // move\r\n                        if (this.options.moveHeadAssetsToBody) {\r\n                            htmlPluginArgs.body = htmlPluginArgs.head.concat(htmlPluginArgs.body);\r\n                            htmlPluginArgs.head = [];\r\n                        }\r\n                        if (this.options.moveBodyAssetsToHead) {\r\n                            htmlPluginArgs.head = htmlPluginArgs.head.concat(htmlPluginArgs.body);\r\n                            htmlPluginArgs.body = [];\r\n                        }\r\n\r\n                        // clear\r\n                        //\r\n                        if (this.options.clearHeadAssets) {\r\n                            htmlPluginArgs.head = [];\r\n                        }\r\n                        if (this.options.clearBodyAssets) {\r\n                            htmlPluginArgs.body = [];\r\n                        }\r\n\r\n                        // *** Order is import\r\n                        // add attributes\r\n                        const updateAttributesFn = (tags: any[], targetTagName: string, attributes: { [key: string]: string }) =>\r\n                            tags.map((tag: any) => {\r\n                                if (tag.tagName === targetTagName) {\r\n                                    Object.keys(attributes).forEach((key: string) => {\r\n                                        tag.attributes[key] = attributes[key];\r\n                                    });\r\n                                }\r\n                                return tag;\r\n                            });\r\n\r\n                        const removeStartingSlashFn = (tags: any[]) =>\r\n                            tags.map((tag: any) => {\r\n                                if ((tag.tagName === 'link' || tag.tagName === 'script') && tag.attributes && (tag.attributes['href'] || tag.attributes['src'])) {\r\n                                    if (tag.attributes.href && tag.attributes.href.length > 1 && tag.attributes.href[0] === '/' && tag.attributes.href[1].match(/\\w/i)) {\r\n                                        tag.attributes.href = tag.attributes.href.substring(1);\r\n                                    } else if (tag.attributes.src && tag.attributes.src.length > 1 && tag.attributes.src[0] === '/' && tag.attributes.src[1].match(/\\w/i)) {\r\n                                        tag.attributes.src = tag.attributes.src.substring(1);\r\n                                    }\r\n                                }\r\n                                return tag;\r\n                            });\r\n\r\n                        if (this.options && this.options.customLinkAttributes) {\r\n                            htmlPluginArgs.head = updateAttributesFn(htmlPluginArgs.head, 'link', this.options.customLinkAttributes);\r\n                            htmlPluginArgs.body = updateAttributesFn(htmlPluginArgs.body, 'link', this.options.customLinkAttributes);\r\n                        }\r\n                        if (this.options && this.options.customScriptAttributes) {\r\n                            htmlPluginArgs.head = updateAttributesFn(htmlPluginArgs.head, 'script', this.options.customScriptAttributes);\r\n                            htmlPluginArgs.body = updateAttributesFn(htmlPluginArgs.body, 'script', this.options.customScriptAttributes);\r\n                        }\r\n\r\n                        // *** Order is import\r\n                        // remove starting slash\r\n                        if (this.options.removeStartingSlash) {\r\n                            htmlPluginArgs.head = removeStartingSlashFn(htmlPluginArgs.head);\r\n                            htmlPluginArgs.body = removeStartingSlashFn(htmlPluginArgs.body);\r\n                        }\r\n\r\n                        return callback(null, htmlPluginArgs);\r\n                    });\r\n            });\r\n    }\r\n}\r\n"]}