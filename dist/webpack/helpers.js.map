{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/webpack/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\r\nimport * as fs from 'fs';\r\n\r\nimport { readJsonSync } from '../utils';\r\nimport { DllEntry } from './models';\r\n\r\nexport * from '../utils';\r\n\r\nexport function parseDllEntries(baseDir: string, dlls: (string | DllEntry)[], target: string, env: string): DllEntry[] {\r\n    if (!dlls || !dlls.length) {\r\n        return [];\r\n    }\r\n\r\n    const envShort = env;\r\n    const envLong = env === 'prod' ? 'production' : 'development';\r\n\r\n    const parsedDllEntries: DllEntry[] = [];\r\n\r\n    dlls.map((e: string | DllEntry) => {\r\n        if (typeof e === 'string') {\r\n            return {\r\n                entry: e\r\n            };\r\n        }\r\n        return e;\r\n    }).filter((e: DllEntry) =>\r\n        e &&\r\n        e.entry &&\r\n        e.entry.length &&\r\n        // targets\r\n        (!e.targets || e.targets.length === 0 || e.targets.indexOf(target) > -1) &&\r\n        // env\r\n        (!e.env || e.env === envShort || e.env === envLong))\r\n        .forEach((e: DllEntry) => {\r\n            const entry = parseDllEntryValues(baseDir, e.entry, envLong);\r\n            parsedDllEntries.push({\r\n                entry: entry,\r\n                targets: e.targets,\r\n                env: e.env,\r\n                importToMain: e.importToMain\r\n            });\r\n\r\n        });\r\n    return parsedDllEntries;\r\n}\r\n\r\nexport function parseDllEntryValues(baseDir: string, entryValue: any, env: string): string[] {\r\n    const dllList: string[] = [];\r\n\r\n    if (Array.isArray(entryValue)) {\r\n        entryValue.forEach((value) => {\r\n            const list = parseDllEntryValue(baseDir, value, env);\r\n            dllList.push(...list);\r\n        });\r\n    } else if (typeof entryValue === 'string' && entryValue.length) {\r\n        let list = parseDllEntryValue(baseDir, entryValue, env);\r\n        dllList.push(...list);\r\n    }\r\n    return dllList;\r\n}\r\n\r\nfunction parseDllEntryValue(baseDir: string, entryValue: string, env: string): string[] {\r\n    const dllPath = path.resolve(baseDir, entryValue);\r\n    if (fs.existsSync(dllPath)) {\r\n        if (dllPath.match(/\\.json$/)) {\r\n            const dataArray = readJsonSync(dllPath);\r\n            if (Array.isArray(dataArray)) {\r\n                return dataArray;\r\n            } else {\r\n                throw new Error(`Invalid 'entry' value in dllEntry, file: ${dllPath}.`);\r\n            }\r\n        }\r\n        if (dllPath.match(/\\.(js|ts)$/)) {\r\n            try {\r\n                const data = require(dllPath);\r\n\r\n                if (data && data.default && typeof data.default === 'function') {\r\n                    //return data.default(env);\r\n                    const dataArray = data.default(env);\r\n                    if (Array.isArray(dataArray)) {\r\n                        return dataArray;\r\n                    } else {\r\n                        throw new Error(`Invalid 'entry' value in dllEntry, file: ${dllPath}.`);\r\n                    }\r\n                }\r\n                if (data && typeof data === 'function') {\r\n                    const dataArray = data(env);\r\n                    if (Array.isArray(dataArray)) {\r\n                        return dataArray;\r\n                    } else {\r\n                        throw new Error(`Invalid 'entry' value in dllEntry, file: ${dllPath}.`);\r\n                    }\r\n                }\r\n\r\n                if (Array.isArray(data)) {\r\n                    return data;\r\n                } else {\r\n                    return [entryValue];\r\n                }\r\n            } catch (ex) {\r\n                return [entryValue];\r\n            }\r\n        }\r\n\r\n    } else {\r\n        return [entryValue];\r\n    }\r\n    throw new Error(`Invalid 'entry' value in dllEntry.`);\r\n}\r\n\r\n// Ref: https://github.com/angular/angular-cli\r\nexport function packageChunkSort(packages: string[]) {\r\n    return (left: any, right: any) => {\r\n        const leftIndex = packages.indexOf(left.names[0]);\r\n        const rightindex = packages.indexOf(right.names[0]);\r\n\r\n        if (leftIndex < 0 || rightindex < 0) {\r\n            // Unknown packages are loaded last\r\n            return 1;\r\n        }\r\n\r\n        if (leftIndex > rightindex) {\r\n            return 1;\r\n        }\r\n\r\n        return -1;\r\n    };\r\n}\r\n\r\nexport function isWebpackDevServer(): boolean {\r\n    return process.argv[1] && !!(/webpack-dev-server/.exec(process.argv[1]));\r\n}\r\n\r\nexport function hasProdArg(): boolean {\r\n    return (process.env.ASPNETCORE_ENVIRONMENT && process.env.ASPNETCORE_ENVIRONMENT.toLowerCase() === 'production') ||\r\n        process.argv.indexOf('--env.prod') > -1 ||\r\n        process.argv.indexOf('--env.production') > -1 ||\r\n        process.argv.indexOf('--env.Production') > -1 ||\r\n        (process.env.NODE_ENV &&\r\n            (process.env.NODE_ENV.toLowerCase() === 'prod' ||\r\n                process.env.NODE_ENV.toLowerCase() === 'production'));\r\n}\r\n\r\nexport function getEnv(debug: boolean, longName?: boolean): string {\r\n    return longName ? debug ? 'development' : 'production' : debug ? 'dev' : 'prod';\r\n}\r\n\r\nexport function isDllBuildFromNpmEvent(eventName?: string): boolean {\r\n    const lcEvent = process.env.npm_lifecycle_event;\r\n    if (!lcEvent) {\r\n        return false;\r\n    }\r\n\r\n    if (eventName) {\r\n        return lcEvent.includes(eventName);\r\n    } else {\r\n        return lcEvent.includes('build:dll') ||\r\n            lcEvent.includes('dll:build') ||\r\n            lcEvent.includes(':dll') ||\r\n            lcEvent === 'dll';\r\n    }\r\n}\r\n\r\nexport function isAoTBuildFromNpmEvent(eventName?: string): boolean {\r\n    const lcEvent = process.env.npm_lifecycle_event;\r\n    if (!lcEvent) {\r\n        return false;\r\n    }\r\n\r\n    if (eventName) {\r\n        return lcEvent.includes(eventName);\r\n    } else {\r\n        return lcEvent.includes('build:aot') ||\r\n            lcEvent.includes('aot:build') ||\r\n            lcEvent.includes(':aot') ||\r\n            lcEvent === 'aot';\r\n    }\r\n}\r\n\r\n\r\n//export function findNpmScriptCommandName(baseDir: string, keyFilter: RegExp, valueFilter?: RegExp): string {\r\n//  let pkgConfigPath = path.resolve(baseDir, 'package.json');\r\n//  if (!fs.existsSync(pkgConfigPath)) {\r\n//    pkgConfigPath = path.resolve(baseDir, '../package.json');\r\n//  }\r\n//  if (!fs.existsSync(pkgConfigPath)) {\r\n//    return null;\r\n//  }\r\n\r\n//  const pkgConfig = readJsonSync(pkgConfigPath);\r\n//  if (!pkgConfig.scripts) {\r\n//    return null;\r\n//  }\r\n//  const foundKey = Object.keys(pkgConfig.scripts).find((key: string) => {\r\n//    return keyFilter.test(key) && (!valueFilter || (valueFilter && valueFilter.test(pkgConfig.scripts[key])));\r\n//  });\r\n\r\n//  return foundKey;\r\n//}\r\n\r\n//export function tryBuildDll(manifestFiles: string[], debug: boolean, baseDir: string, command?: string, commandArgs?: string[]): void {\r\n//  try {\r\n//    manifestFiles\r\n//      .forEach((manifestFile: string) => {\r\n//        fs.accessSync(manifestFile);\r\n//      });\r\n//  } catch (err) {\r\n\r\n//    if (!command) {\r\n//      const npmScriptName = findNpmScriptCommandName(baseDir, /(dll([:\\-]build)?)|((build[:\\-])?dll)/i, /\\s*webpack\\s*/i);\r\n//      if (npmScriptName) {\r\n//        // 'npm', ['run', 'build:dll']\r\n//        command = 'npm';\r\n//        commandArgs = ['run', npmScriptName];\r\n//      } else {\r\n//        let webpackConfigFile = null;\r\n//        if (fs.existsSync(path.resolve(baseDir, 'webpack.config.dll.js'))) {\r\n//          webpackConfigFile = 'webpack.config.dll.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.dll.js'))) {\r\n//          webpackConfigFile = 'webpack.dll.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpackfile.dll.js'))) {\r\n//          webpackConfigFile = 'webpackfile.dll.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.config.vendor.js'))) {\r\n//          webpackConfigFile = 'webpack.config.vendor.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.vendor.js'))) {\r\n//          webpackConfigFile = 'webpack.vendor.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpackfile.vendor.js'))) {\r\n//          webpackConfigFile = 'webpackfile.vendor.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.config.dll.ts'))) {\r\n//          webpackConfigFile = 'webpack.config.dll.ts';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.dll.ts'))) {\r\n//          webpackConfigFile = 'webpack.dll.ts';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpackfile.dll.ts'))) {\r\n//          webpackConfigFile = 'webpackfile.dll.ts';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.config.vendor.ts'))) {\r\n//          webpackConfigFile = 'webpack.config.vendor.ts';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.vendor.ts'))) {\r\n//          webpackConfigFile = 'webpack.vendor.ts';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpackfile.vendor.ts'))) {\r\n//          webpackConfigFile = 'webpackfile.vendor.ts';\r\n//        }\r\n\r\n//        if (webpackConfigFile) {\r\n//          command = 'node';\r\n//          const env = debug ? '--env.dev' : '--env.prod';\r\n//          commandArgs = ['node_modules/webpack/bin/webpack.js', '--config', webpackConfigFile, env];\r\n//        }\r\n\r\n//      }\r\n//    }\r\n\r\n//    tryToSpawn(command, commandArgs);\r\n//  }\r\n//}\r\n\r\n//export function tryToSpawn(command: string, commandArgs: string[]) {\r\n//  const spawn: any = require('cross-spawn');\r\n//  spawn.sync(command, commandArgs, { stdio: 'inherit' });\r\n//  return;\r\n//}\r\n\r\n// Ref: https://github.com/AngularClass/angular2-webpack-starter"]}