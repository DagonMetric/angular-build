{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/webpack/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\r\nimport * as fs from 'fs';\r\n\r\nimport { DllEntry } from './models';\r\n\r\n// Dlls\r\n// TODO: move to loader\r\n\r\ninterface DllSingleEntryParsedResult {\r\n    entry: string[];\r\n    fileDependency?: string;\r\n}\r\n\r\nexport interface DllEntryParsedResult {\r\n    entries: DllEntry[];\r\n    fileDependencies?: string[];\r\n}\r\n\r\nexport function parseDllEntries(baseDir: string, dlls: string | (string | DllEntry)[], isProd: boolean): DllEntryParsedResult {\r\n    if (!dlls || !dlls.length) {\r\n        return null;\r\n    }\r\n\r\n    const envLong = getEnvName(isProd, true);\r\n\r\n    let normalizedDlls: (string | DllEntry)[];\r\n    if (Array.isArray(dlls)) {\r\n        normalizedDlls = dlls;\r\n    } else {\r\n        normalizedDlls = [dlls];\r\n    }\r\n\r\n    const dllEntries: DllEntry[] = [];\r\n    const fileDependencies: string[] = [];\r\n    normalizedDlls.map((e: string | DllEntry) => {\r\n        if (typeof e === 'string') {\r\n            return {\r\n                entry: e\r\n            };\r\n        }\r\n        return e;\r\n    }).filter((e: DllEntry) =>\r\n        e &&\r\n        e.entry &&\r\n        e.entry.length)\r\n        .forEach((e: DllEntry) => {\r\n            const entries = Array.isArray(e.entry) ? e.entry : [e.entry];\r\n            entries.forEach((entryStr: string) => {\r\n                const parsedEntry = parseDllEntryValue(baseDir, entryStr, envLong);\r\n                if (parsedEntry.fileDependency) {\r\n                    fileDependencies.push(parsedEntry.fileDependency);\r\n                }\r\n                dllEntries.push(Object.assign(e, { entry: parsedEntry.entry }));\r\n            });\r\n        });\r\n    return {\r\n        entries: dllEntries,\r\n        fileDependencies: fileDependencies\r\n    };\r\n}\r\n\r\nfunction parseDllEntryValue(baseDir: string, entryValue: string, env: string): DllSingleEntryParsedResult {\r\n    const dllPath = path.resolve(baseDir, entryValue);\r\n    if (fs.existsSync(dllPath) && fs.statSync(dllPath).isFile()) {\r\n        if (dllPath.match(/\\.(js|ts)$/i)) {\r\n            const data = require(dllPath);\r\n            if (data && data.default && typeof data.default === 'function') {\r\n                const dataArray = data.default(env);\r\n                if (Array.isArray(dataArray)) {\r\n                    return {\r\n                        entry: dataArray,\r\n                        fileDependency: dllPath\r\n                    };\r\n                } else {\r\n                    throw new Error(`Invalid value in dlls, file: ${dllPath}.`);\r\n                }\r\n            }\r\n            if (data && typeof data === 'function') {\r\n                const dataArray = data(env);\r\n                if (Array.isArray(dataArray)) {\r\n                    return {\r\n                        entry: dataArray,\r\n                        fileDependency: dllPath\r\n                    };\r\n                } else {\r\n                    throw new Error(`Invalid value in dlls, file: ${dllPath}.`);\r\n                }\r\n            }\r\n            if (Array.isArray(data)) {\r\n                return {\r\n                    entry: data,\r\n                    fileDependency: dllPath\r\n                };\r\n            } else {\r\n                // For\r\n                // import 'core-js' etc..\r\n                return {\r\n                    entry: [entryValue]\r\n                };\r\n            }\r\n        }\r\n\r\n    } else {\r\n        // For\r\n        // import 'core-js' etc..\r\n        return {\r\n            entry: [entryValue]\r\n        };\r\n    }\r\n    throw new Error(`Invalid value in dlls.`);\r\n}\r\n\r\n// Ref: https://github.com/angular/angular-cli\r\nexport function packageChunkSort(packages: string[]) {\r\n    return (left: any, right: any) => {\r\n        const leftIndex = packages.indexOf(left.names[0]);\r\n        const rightindex = packages.indexOf(right.names[0]);\r\n\r\n        if (leftIndex < 0 || rightindex < 0) {\r\n            // Unknown packages are loaded last\r\n            return 1;\r\n        }\r\n\r\n        if (leftIndex > rightindex) {\r\n            return 1;\r\n        }\r\n\r\n        return -1;\r\n    };\r\n}\r\n\r\nexport function isWebpackDevServer(): boolean {\r\n    return process.argv[1] && !!(/webpack-dev-server/.exec(process.argv[1]));\r\n}\r\n\r\nexport function hasProdArg(): boolean {\r\n    return (process.env.ASPNETCORE_ENVIRONMENT && process.env.ASPNETCORE_ENVIRONMENT.toLowerCase() === 'production') ||\r\n        process.argv.indexOf('--env.prod') > -1 ||\r\n        process.argv.indexOf('--env.production') > -1 ||\r\n        process.argv.indexOf('--env.Production') > -1 ||\r\n        (process.env.NODE_ENV &&\r\n            (process.env.NODE_ENV.toLowerCase() === 'prod' ||\r\n                process.env.NODE_ENV.toLowerCase() === 'production'));\r\n}\r\n\r\nexport function getEnvName(isProd: boolean, longName?: boolean): string {\r\n    return longName ? isProd ? 'production' : 'development' : isProd ? 'prod' : 'dev';\r\n}\r\n\r\nexport function isDllBuildFromNpmEvent(eventName?: string): boolean {\r\n    const lcEvent = process.env.npm_lifecycle_event;\r\n    if (!lcEvent) {\r\n        return false;\r\n    }\r\n\r\n    if (eventName) {\r\n        return lcEvent.includes(eventName);\r\n    } else {\r\n        return lcEvent.includes(':dll') ||\r\n            lcEvent.includes('-dll') ||\r\n            lcEvent === 'dll';\r\n    }\r\n}\r\n\r\nexport function isAoTBuildFromNpmEvent(eventName?: string): boolean {\r\n    const lcEvent = process.env.npm_lifecycle_event;\r\n    if (!lcEvent) {\r\n        return false;\r\n    }\r\n\r\n    if (eventName) {\r\n        return lcEvent.includes(eventName);\r\n    } else {\r\n        return lcEvent.includes(':aot') ||\r\n            lcEvent.includes('-aot') ||\r\n            lcEvent === 'aot';\r\n    }\r\n}\r\n\r\n\r\n//export function findNpmScriptCommandName(baseDir: string, keyFilter: RegExp, valueFilter?: RegExp): string {\r\n//  let pkgConfigPath = path.resolve(baseDir, 'package.json');\r\n//  if (!fs.existsSync(pkgConfigPath)) {\r\n//    pkgConfigPath = path.resolve(baseDir, '../package.json');\r\n//  }\r\n//  if (!fs.existsSync(pkgConfigPath)) {\r\n//    return null;\r\n//  }\r\n\r\n//  const pkgConfig = readJsonSync(pkgConfigPath);\r\n//  if (!pkgConfig.scripts) {\r\n//    return null;\r\n//  }\r\n//  const foundKey = Object.keys(pkgConfig.scripts).find((key: string) => {\r\n//    return keyFilter.test(key) && (!valueFilter || (valueFilter && valueFilter.test(pkgConfig.scripts[key])));\r\n//  });\r\n\r\n//  return foundKey;\r\n//}\r\n\r\n//export function tryBuildDll(manifestFiles: string[], debug: boolean, baseDir: string, command?: string, commandArgs?: string[]): void {\r\n//  try {\r\n//    manifestFiles\r\n//      .forEach((manifestFile: string) => {\r\n//        fs.accessSync(manifestFile);\r\n//      });\r\n//  } catch (err) {\r\n\r\n//    if (!command) {\r\n//      const npmScriptName = findNpmScriptCommandName(baseDir, /(dll([:\\-]build)?)|((build[:\\-])?dll)/i, /\\s*webpack\\s*/i);\r\n//      if (npmScriptName) {\r\n//        // 'npm', ['run', 'build:dll']\r\n//        command = 'npm';\r\n//        commandArgs = ['run', npmScriptName];\r\n//      } else {\r\n//        let webpackConfigFile = null;\r\n//        if (fs.existsSync(path.resolve(baseDir, 'webpack.config.dll.js'))) {\r\n//          webpackConfigFile = 'webpack.config.dll.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.dll.js'))) {\r\n//          webpackConfigFile = 'webpack.dll.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpackfile.dll.js'))) {\r\n//          webpackConfigFile = 'webpackfile.dll.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.config.vendor.js'))) {\r\n//          webpackConfigFile = 'webpack.config.vendor.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.vendor.js'))) {\r\n//          webpackConfigFile = 'webpack.vendor.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpackfile.vendor.js'))) {\r\n//          webpackConfigFile = 'webpackfile.vendor.js';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.config.dll.ts'))) {\r\n//          webpackConfigFile = 'webpack.config.dll.ts';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.dll.ts'))) {\r\n//          webpackConfigFile = 'webpack.dll.ts';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpackfile.dll.ts'))) {\r\n//          webpackConfigFile = 'webpackfile.dll.ts';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.config.vendor.ts'))) {\r\n//          webpackConfigFile = 'webpack.config.vendor.ts';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpack.vendor.ts'))) {\r\n//          webpackConfigFile = 'webpack.vendor.ts';\r\n//        } else if (fs.existsSync(path.resolve(baseDir, 'webpackfile.vendor.ts'))) {\r\n//          webpackConfigFile = 'webpackfile.vendor.ts';\r\n//        }\r\n\r\n//        if (webpackConfigFile) {\r\n//          command = 'node';\r\n//          const env = debug ? '--env.dev' : '--env.prod';\r\n//          commandArgs = ['node_modules/webpack/bin/webpack.js', '--config', webpackConfigFile, env];\r\n//        }\r\n\r\n//      }\r\n//    }\r\n\r\n//    tryToSpawn(command, commandArgs);\r\n//  }\r\n//}\r\n\r\n//export function tryToSpawn(command: string, commandArgs: string[]) {\r\n//  const spawn: any = require('cross-spawn');\r\n//  spawn.sync(command, commandArgs, { stdio: 'inherit' });\r\n//  return;\r\n//}\r\n\r\n// Ref: https://github.com/AngularClass/angular2-webpack-starter"]}