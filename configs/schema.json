{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "additionalProperties": true,
    "definitions": {
        "AppConfig": {
            "additionalProperties": false,
            "description": "The app config.",
            "properties": {
                "aotResourceOverridePath": {
                    "description": "AoT resource override path.",
                    "type": "string"
                },
                "appendOutputHash": {
                    "description": "Appends version hash to the ouput bundled files.",
                    "type": "boolean"
                },
                "assets": {
                    "default": "[]",
                    "description": "List of application assets.",
                    "items": {
                        "anyOf": [
                            {
                                "properties": {
                                    "context": {
                                        "description": "A path that determines how to interpret the from path.",
                                        "type": "string"
                                    },
                                    "flatten": {
                                        "default": false,
                                        "description": "Removes all directory references and only copies file names.",
                                        "type": "boolean"
                                    },
                                    "force": {
                                        "default": false,
                                        "description": "Overwrites files already in compilation.assets (usually added by other plugins).",
                                        "type": "boolean"
                                    },
                                    "from": {
                                        "anyOf": [
                                            {
                                                "properties": {
                                                    "dot": {
                                                        "type": "boolean"
                                                    },
                                                    "glob": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "description": "The source file, it can be absolute or relative path or glob pattern."
                                    },
                                    "glob": {
                                        "description": "Angular-cli compatible, same as 'glob' property of 'from' object.",
                                        "type": "string"
                                    },
                                    "ignore": {
                                        "description": "Additional globs to ignore for this pattern.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "input": {
                                        "description": "Angular-cli compatible, same as 'from' property.",
                                        "type": "string"
                                    },
                                    "output": {
                                        "description": "Angular-cli compatible, same as 'to' property.",
                                        "type": "string"
                                    },
                                    "to": {
                                        "description": "The output root if from is file or dir.",
                                        "type": "string"
                                    },
                                    "toType": {
                                        "description": "'file' if to has extension or from is file.\n'dir' if from is directory, to has no extension or ends in '/'.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "buildTargetOverrides": {
                    "description": "To override properties based on build targets.",
                    "properties": {
                        "aot": {
                            "$ref": "#/definitions/AppConfigOverridable"
                        },
                        "dev": {
                            "$ref": "#/definitions/AppConfigOverridable"
                        },
                        "dll": {
                            "$ref": "#/definitions/AppConfigOverridable"
                        },
                        "prod": {
                            "$ref": "#/definitions/AppConfigOverridable"
                        },
                        "universal": {
                            "$ref": "#/definitions/AppConfigOverridable"
                        }
                    },
                    "type": "object"
                },
                "compressAssets": {
                    "description": "Compress assets.",
                    "type": "boolean"
                },
                "deployUrl": {
                    "description": "Angular-cli compatible, same as 'publicPath' property.",
                    "type": "string"
                },
                "dllChunkName": {
                    "default": "vendor",
                    "description": "The output chunk name for dll bundle.",
                    "type": "string"
                },
                "dlls": {
                    "default": "[]",
                    "description": "The entries for dll bundle.",
                    "items": {
                        "anyOf": [
                            {
                                "properties": {
                                    "entry": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "excludes": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "importToMain": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "environmentFile": {
                    "description": "The environment file for the build target.",
                    "type": "string"
                },
                "environmentSource": {
                    "description": "Source file for environment config.",
                    "type": "string"
                },
                "environments": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Name and corresponding file for environment config.",
                    "type": "object"
                },
                "extends": {
                    "description": "Extends the app config from another one. Use the name of another app config.",
                    "type": "string"
                },
                "extractCss": {
                    "description": "Extracts css.",
                    "type": "boolean"
                },
                "faviconConfig": {
                    "default": "favicon-config.json",
                    "description": "The favicon configuration file.",
                    "type": "string"
                },
                "htmlInjectOptions": {
                    "description": "The html injection options.",
                    "properties": {
                        "customTagAttributes": {
                            "items": {
                                "properties": {
                                    "attribute": {
                                        "additionalProperties": {
                                            "type": [
                                                "string",
                                                "boolean"
                                            ]
                                        },
                                        "type": "object"
                                    },
                                    "tagName": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "iconsOutFileName": {
                            "type": "string"
                        },
                        "indexOutFileName": {
                            "type": "string"
                        },
                        "stylesOutFileName": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "i18nFile": {
                    "description": "i18n file.",
                    "type": "string"
                },
                "i18nFormat": {
                    "description": "i18n format.",
                    "type": "string"
                },
                "index": {
                    "description": "The index html template file.",
                    "type": "string"
                },
                "inlineChunk": {
                    "description": "If true, chunk into 'inline.js'",
                    "type": "boolean"
                },
                "locale": {
                    "description": "Locale.",
                    "type": "string"
                },
                "main": {
                    "description": "The entry for app main bootstrap file.",
                    "type": "string"
                },
                "moduleReplacements": {
                    "description": "Replaces resources that matches resourceRegExp with newResource.",
                    "items": {
                        "properties": {
                            "newResource": {
                                "type": "string"
                            },
                            "resourceRegExp": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name for app config.",
                    "type": "string"
                },
                "outDir": {
                    "description": "The output directory for build results.",
                    "type": "string"
                },
                "polyfills": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "default": "[]",
                    "description": "The entries for app polyfills to be imported to the main entry."
                },
                "provide": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "To automatically load modules with alias key.",
                    "type": "object"
                },
                "publicPath": {
                    "description": "The public url address of the output files.",
                    "type": "string"
                },
                "referenceDll": {
                    "description": "To reference dll.",
                    "type": "boolean"
                },
                "root": {
                    "description": "The root directory of the app.",
                    "type": "string"
                },
                "scripts": {
                    "default": "[]",
                    "description": "Script entries to be added to the global scope.",
                    "items": {
                        "anyOf": [
                            {
                                "properties": {
                                    "input": {
                                        "type": "string"
                                    },
                                    "lazy": {
                                        "type": "boolean"
                                    },
                                    "output": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "skip": {
                    "description": "To skip this app config when bundling.",
                    "type": "boolean"
                },
                "skipCopyAssets": {
                    "description": "Skips copying assets.",
                    "type": "boolean"
                },
                "skipGenerateIcons": {
                    "description": "Skips generating icons.",
                    "type": "boolean"
                },
                "sourceMap": {
                    "description": "Generates sourcemaps.",
                    "type": "boolean"
                },
                "stylePreprocessorOptions": {
                    "description": "Options to pass to style preprocessors",
                    "properties": {
                        "includePaths": {
                            "default": "[]",
                            "description": "\"Paths to include. Paths will be resolved to project root.\"",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "styles": {
                    "default": "[]",
                    "description": "Global script entries to be included in the build. Supported styles are .css, .scss, .less and .stylus.",
                    "items": {
                        "anyOf": [
                            {
                                "properties": {
                                    "input": {
                                        "type": "string"
                                    },
                                    "lazy": {
                                        "type": "boolean"
                                    },
                                    "output": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "target": {
                    "default": "web",
                    "description": "Tells the build system which environment the application is targeting.",
                    "enum": [
                        "async-node",
                        "electron",
                        "electron-renderer",
                        "node",
                        "node-webkit",
                        "web",
                        "webworker"
                    ],
                    "type": "string"
                },
                "test": {
                    "type": "string"
                },
                "tsconfig": {
                    "default": "tsconfig.json",
                    "description": "The typescript configuration file.",
                    "type": "string"
                },
                "vendorChunk": {
                    "description": "If true, chunk into 'inline.js'",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "AppConfigOverridable": {
            "additionalProperties": false,
            "properties": {
                "aotResourceOverridePath": {
                    "description": "AoT resource override path.",
                    "type": "string"
                },
                "appendOutputHash": {
                    "description": "Appends version hash to the ouput bundled files.",
                    "type": "boolean"
                },
                "assets": {
                    "default": "[]",
                    "description": "List of application assets.",
                    "items": {
                        "anyOf": [
                            {
                                "properties": {
                                    "context": {
                                        "description": "A path that determines how to interpret the from path.",
                                        "type": "string"
                                    },
                                    "flatten": {
                                        "default": false,
                                        "description": "Removes all directory references and only copies file names.",
                                        "type": "boolean"
                                    },
                                    "force": {
                                        "default": false,
                                        "description": "Overwrites files already in compilation.assets (usually added by other plugins).",
                                        "type": "boolean"
                                    },
                                    "from": {
                                        "anyOf": [
                                            {
                                                "properties": {
                                                    "dot": {
                                                        "type": "boolean"
                                                    },
                                                    "glob": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "description": "The source file, it can be absolute or relative path or glob pattern."
                                    },
                                    "glob": {
                                        "description": "Angular-cli compatible, same as 'glob' property of 'from' object.",
                                        "type": "string"
                                    },
                                    "ignore": {
                                        "description": "Additional globs to ignore for this pattern.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "input": {
                                        "description": "Angular-cli compatible, same as 'from' property.",
                                        "type": "string"
                                    },
                                    "output": {
                                        "description": "Angular-cli compatible, same as 'to' property.",
                                        "type": "string"
                                    },
                                    "to": {
                                        "description": "The output root if from is file or dir.",
                                        "type": "string"
                                    },
                                    "toType": {
                                        "description": "'file' if to has extension or from is file.\n'dir' if from is directory, to has no extension or ends in '/'.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "compressAssets": {
                    "description": "Compress assets.",
                    "type": "boolean"
                },
                "deployUrl": {
                    "description": "Angular-cli compatible, same as 'publicPath' property.",
                    "type": "string"
                },
                "dllChunkName": {
                    "default": "vendor",
                    "description": "The output chunk name for dll bundle.",
                    "type": "string"
                },
                "dlls": {
                    "default": "[]",
                    "description": "The entries for dll bundle.",
                    "items": {
                        "anyOf": [
                            {
                                "properties": {
                                    "entry": {
                                        "anyOf": [
                                            {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "excludes": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "importToMain": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "environmentFile": {
                    "description": "The environment file for the build target.",
                    "type": "string"
                },
                "extractCss": {
                    "description": "Extracts css.",
                    "type": "boolean"
                },
                "faviconConfig": {
                    "default": "favicon-config.json",
                    "description": "The favicon configuration file.",
                    "type": "string"
                },
                "htmlInjectOptions": {
                    "description": "The html injection options.",
                    "properties": {
                        "customTagAttributes": {
                            "items": {
                                "properties": {
                                    "attribute": {
                                        "additionalProperties": {
                                            "type": [
                                                "string",
                                                "boolean"
                                            ]
                                        },
                                        "type": "object"
                                    },
                                    "tagName": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "iconsOutFileName": {
                            "type": "string"
                        },
                        "indexOutFileName": {
                            "type": "string"
                        },
                        "stylesOutFileName": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "i18nFile": {
                    "description": "i18n file.",
                    "type": "string"
                },
                "i18nFormat": {
                    "description": "i18n format.",
                    "type": "string"
                },
                "index": {
                    "description": "The index html template file.",
                    "type": "string"
                },
                "inlineChunk": {
                    "description": "If true, chunk into 'inline.js'",
                    "type": "boolean"
                },
                "locale": {
                    "description": "Locale.",
                    "type": "string"
                },
                "main": {
                    "description": "The entry for app main bootstrap file.",
                    "type": "string"
                },
                "moduleReplacements": {
                    "description": "Replaces resources that matches resourceRegExp with newResource.",
                    "items": {
                        "properties": {
                            "newResource": {
                                "type": "string"
                            },
                            "resourceRegExp": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "outDir": {
                    "description": "The output directory for build results.",
                    "type": "string"
                },
                "polyfills": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "default": "[]",
                    "description": "The entries for app polyfills to be imported to the main entry."
                },
                "provide": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "To automatically load modules with alias key.",
                    "type": "object"
                },
                "publicPath": {
                    "description": "The public url address of the output files.",
                    "type": "string"
                },
                "referenceDll": {
                    "description": "To reference dll.",
                    "type": "boolean"
                },
                "root": {
                    "description": "The root directory of the app.",
                    "type": "string"
                },
                "scripts": {
                    "default": "[]",
                    "description": "Script entries to be added to the global scope.",
                    "items": {
                        "anyOf": [
                            {
                                "properties": {
                                    "input": {
                                        "type": "string"
                                    },
                                    "lazy": {
                                        "type": "boolean"
                                    },
                                    "output": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "skip": {
                    "description": "To skip this app config when bundling.",
                    "type": "boolean"
                },
                "skipCopyAssets": {
                    "description": "Skips copying assets.",
                    "type": "boolean"
                },
                "skipGenerateIcons": {
                    "description": "Skips generating icons.",
                    "type": "boolean"
                },
                "sourceMap": {
                    "description": "Generates sourcemaps.",
                    "type": "boolean"
                },
                "stylePreprocessorOptions": {
                    "description": "Options to pass to style preprocessors",
                    "properties": {
                        "includePaths": {
                            "default": "[]",
                            "description": "\"Paths to include. Paths will be resolved to project root.\"",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "styles": {
                    "default": "[]",
                    "description": "Global script entries to be included in the build. Supported styles are .css, .scss, .less and .stylus.",
                    "items": {
                        "anyOf": [
                            {
                                "properties": {
                                    "input": {
                                        "type": "string"
                                    },
                                    "lazy": {
                                        "type": "boolean"
                                    },
                                    "output": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "test": {
                    "type": "string"
                },
                "tsconfig": {
                    "default": "tsconfig.json",
                    "description": "The typescript configuration file.",
                    "type": "string"
                },
                "vendorChunk": {
                    "description": "If true, chunk into 'inline.js'",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "BuildOptions": {
            "additionalProperties": false,
            "description": "Build options.",
            "properties": {
                "aot": {
                    "description": "Set true for aot target.",
                    "type": "boolean"
                },
                "app": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "To build only specific app. Use app's name."
                },
                "appendOutputHash": {
                    "description": "Appends version hash to the ouput files.",
                    "type": "boolean"
                },
                "compressAssets": {
                    "description": "Compress assets.",
                    "type": "boolean"
                },
                "configFilePath": {
                    "description": "The 'angular-build.json' config file path.",
                    "type": "string"
                },
                "dll": {
                    "description": "Set true for dll build.",
                    "type": "boolean"
                },
                "extractCss": {
                    "description": "Extracts css.",
                    "type": "boolean"
                },
                "performanceHint": {
                    "default": false,
                    "description": "Show performance hints.",
                    "type": "boolean"
                },
                "production": {
                    "description": "Set true for production.",
                    "type": "boolean"
                },
                "progress": {
                    "description": "Shows progress.",
                    "type": "boolean"
                },
                "referenceDll": {
                    "description": "To reference dlls for all apps.",
                    "type": "boolean"
                },
                "skipCopyAssets": {
                    "description": "Skips copying assets.",
                    "type": "boolean"
                },
                "skipGenerateIcons": {
                    "description": "Skips generating icons.",
                    "type": "boolean"
                },
                "sourceMap": {
                    "description": "Generates sourcemaps.",
                    "type": "boolean"
                },
                "universal": {
                    "description": "Set true for universal target.",
                    "type": "boolean"
                },
                "verbose": {
                    "default": false,
                    "description": "If true, the console displays detailed diagnostic information.",
                    "type": "boolean"
                }
            },
            "type": "object"
        }
    },
    "description": "Angular build config schema.",
    "properties": {
        "apps": {
            "description": "Properties of the different applications in this project.",
            "items": {
                "$ref": "#/definitions/AppConfig"
            },
            "minItems": 1,
            "type": "array"
        },
        "buildOptions": {
            "$ref": "#/definitions/BuildOptions",
            "description": "Build options"
        }
    },
    "type": "object"
}

