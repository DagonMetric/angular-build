trigger:
  branches:
    include:
    - master
  paths:
    include:
    - 'bin/*'
    - 'configs/*'
    - 'src/*'
    - 'package.json'
    - 'README.md'
    - 'azure-pipelines.yml'

jobs:
  - job: basic
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: UseNode@1
        inputs:
          version: '10.9.0'
        displayName: 'Use Node 10.9.0'
      - script: |
          yarn install --frozen-lockfile
        displayName: 'Install dependencies'
      - script: |
          yarn build
        displayName: "Run build"
      - script: |
          yarn build:samples
        displayName: 'Run build samples'
      - script: |
          yarn build:samples
        displayName: 'Run build samples'
      - script: |
          yarn lint
        displayName: 'Run linting'
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'builds'
          targetPath: 'dist'
        displayName: 'Publish build artifacts'
      - bash: |
          $verson=`node -p "require('./dist/package.json').version;"`
          echo "##vso[task.setvariable variable=packageVersion]$verson"
        displayName: 'Set package version variable'

      - script: echo $(packageVersion)
        displayName: 'Print packageVersion'
      # - task: CopyFiles@2
      #   inputs:
      #     SourceFolder: 'release-notes/$(packageVersion)'
      #     Contents: '*.md'
      #     TargetFolder: $(build.artifactstagingdirectory)/release-notes
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'release-notes'
          targetPath: 'release-notes/$(packageVersion)/'
        displayName: 'Publish release notes'


  - job: Linux
    dependsOn:
      - basic
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      maxParallel: 3
      matrix:
        node-12:
          node_version: '12.x'
        node-10:
          node_version: '10.x'
    steps:
      - task: UseNode@1
        inputs:
          version: $(node_version)
        displayName: 'Use Node $(node_version)'
      - script: |
          yarn install --frozen-lockfile
        displayName: 'Install dependencies'
      - script: |
          yarn build
        displayName: 'Run build'
      - script: |
          yarn build:samples
        displayName: 'Run build samples'

  - job: macOS
    dependsOn:
      - basic
    pool:
      vmImage: 'macOS-latest'
    strategy:
      maxParallel: 3
      matrix:
        node-12:
          node_version: '12.x'
        node-10:
          node_version: '10.x'
    steps:
      - task: UseNode@1
        inputs:
          version: $(node_version)
        displayName: 'Use Node $(node_version)'
      - script: |
          yarn install --frozen-lockfile
        displayName: 'Install dependencies'
      - script: |
          yarn build
        displayName: 'Run build'
      - script: |
          yarn build:samples
        displayName: 'Run build samples'

  - job: Windows
    dependsOn:
      - basic
    pool:
      vmImage: 'windows-latest'
    strategy:
      maxParallel: 3
      matrix:
        node-12:
          node_version: '12.x'
        node-10:
          node_version: '10.x'
    steps:
      - task: UseNode@1
        inputs:
          version: $(node_version)
        displayName: 'Use Node $(node_version)'
      - script: |
          yarn install --frozen-lockfile
        displayName: 'Install dependencies'
      - script: |
          yarn build
        displayName: 'Run build'
      - script: |
          yarn build:samples
        displayName: 'Run build samples'
